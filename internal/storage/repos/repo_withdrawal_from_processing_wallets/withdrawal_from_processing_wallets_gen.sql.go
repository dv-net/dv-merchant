// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: withdrawal_from_processing_wallets_gen.sql

package repo_withdrawal_from_processing_wallets

import (
	"context"

	"github.com/dv-net/dv-merchant/internal/models"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const create = `-- name: Create :one
INSERT INTO withdrawal_from_processing_wallets (currency_id, store_id, address_from, address_to, amount, amount_usd, request_id)
	VALUES ($1, $2, $3, $4, $5, $6, $7)
	RETURNING id, currency_id, store_id, transfer_id, address_from, address_to, amount, amount_usd, created_at, updated_at, request_id
`

type CreateParams struct {
	CurrencyID  string          `db:"currency_id" json:"currency_id"`
	StoreID     uuid.UUID       `db:"store_id" json:"store_id"`
	AddressFrom string          `db:"address_from" json:"address_from"`
	AddressTo   string          `db:"address_to" json:"address_to"`
	Amount      decimal.Decimal `db:"amount" json:"amount"`
	AmountUsd   decimal.Decimal `db:"amount_usd" json:"amount_usd"`
	RequestID   *string         `db:"request_id" json:"request_id"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.WithdrawalFromProcessingWallet, error) {
	row := q.db.QueryRow(ctx, create,
		arg.CurrencyID,
		arg.StoreID,
		arg.AddressFrom,
		arg.AddressTo,
		arg.Amount,
		arg.AmountUsd,
		arg.RequestID,
	)
	var i models.WithdrawalFromProcessingWallet
	err := row.Scan(
		&i.ID,
		&i.CurrencyID,
		&i.StoreID,
		&i.TransferID,
		&i.AddressFrom,
		&i.AddressTo,
		&i.Amount,
		&i.AmountUsd,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.RequestID,
	)
	return &i, err
}
