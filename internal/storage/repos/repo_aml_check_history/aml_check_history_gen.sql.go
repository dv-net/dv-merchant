// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: aml_check_history_gen.sql

package repo_aml_check_history

import (
	"context"
	"github.com/dv-net/dv-merchant/internal/models"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const create = `-- name: Create :one
INSERT INTO aml_check_history (aml_check_id, request_payload, service_response, error_msg, attempt_number, created_at)
	VALUES ($1, $2, $3, $4, $5, now())
	RETURNING id, aml_check_id, request_payload, service_response, error_msg, attempt_number, created_at, updated_at
`

type CreateParams struct {
	AmlCheckID      uuid.UUID   `db:"aml_check_id" json:"aml_check_id"`
	RequestPayload  []byte      `db:"request_payload" json:"request_payload"`
	ServiceResponse []byte      `db:"service_response" json:"service_response"`
	ErrorMsg        pgtype.Text `db:"error_msg" json:"error_msg"`
	AttemptNumber   int32       `db:"attempt_number" json:"attempt_number"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.AmlCheckHistory, error) {
	row := q.db.QueryRow(ctx, create,
		arg.AmlCheckID,
		arg.RequestPayload,
		arg.ServiceResponse,
		arg.ErrorMsg,
		arg.AttemptNumber,
	)
	var i models.AmlCheckHistory
	err := row.Scan(
		&i.ID,
		&i.AmlCheckID,
		&i.RequestPayload,
		&i.ServiceResponse,
		&i.ErrorMsg,
		&i.AttemptNumber,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
