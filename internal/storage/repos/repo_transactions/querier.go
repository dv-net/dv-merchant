// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repo_transactions

import (
	"context"

	"github.com/dv-net/dv-merchant/internal/models"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

type Querier interface {
	CalculateDepositStatistics(ctx context.Context, arg CalculateDepositStatisticsParams) ([]*CalculateDepositStatisticsRow, error)
	CalculateDepositStatisticsTotal(ctx context.Context, arg CalculateDepositStatisticsTotalParams) (*CalculateDepositStatisticsTotalRow, error)
	Create(ctx context.Context, arg CreateParams) (*models.Transaction, error)
	FindLastWalletTransactions(ctx context.Context, arg FindLastWalletTransactionsParams) ([]*FindLastWalletTransactionsRow, error)
	FindTransactionByHashAndUserID(ctx context.Context, arg FindTransactionByHashAndUserIDParams) (*FindTransactionByHashAndUserIDRow, error)
	GetAddressBalance(ctx context.Context, arg GetAddressBalanceParams) (decimal.Decimal, error)
	GetBalanceNativeToken(ctx context.Context, arg GetBalanceNativeTokenParams) (decimal.Decimal, error)
	GetById(ctx context.Context, id uuid.UUID) (*models.Transaction, error)
	GetExistingWithdrawalAddress(ctx context.Context, arg GetExistingWithdrawalAddressParams) (string, error)
	GetLastByHashAndBlockchain(ctx context.Context, arg GetLastByHashAndBlockchainParams) (*models.Transaction, error)
	GetTransactionByHashAndBcUniqKey(ctx context.Context, arg GetTransactionByHashAndBcUniqKeyParams) (*models.Transaction, error)
	GetTransactionsByStoreAndType(ctx context.Context, arg GetTransactionsByStoreAndTypeParams) ([]*models.Transaction, error)
	GetTransactionsByStoreId(ctx context.Context, arg GetTransactionsByStoreIdParams) ([]*models.Transaction, error)
	GetTransactionsByUserId(ctx context.Context, arg GetTransactionsByUserIdParams) ([]*models.Transaction, error)
	GetWalletTransactions(ctx context.Context, arg GetWalletTransactionsParams) ([]*models.Transaction, error)
}

var _ Querier = (*Queries)(nil)
