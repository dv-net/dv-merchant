// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repo_user_address_book

import (
	"context"

	"github.com/dv-net/dv-merchant/internal/models"
	"github.com/google/uuid"
)

type Querier interface {
	CheckExists(ctx context.Context, arg CheckExistsParams) (bool, error)
	CheckExistsWithTrashed(ctx context.Context, arg CheckExistsWithTrashedParams) (bool, error)
	Create(ctx context.Context, arg CreateParams) (*models.UserAddressBook, error)
	Delete(ctx context.Context, id uuid.UUID) error
	GetByID(ctx context.Context, id uuid.UUID) (*models.UserAddressBook, error)
	GetByUserAddressAndBlockchain(ctx context.Context, arg GetByUserAddressAndBlockchainParams) ([]*models.UserAddressBook, error)
	GetByUserAndAddress(ctx context.Context, arg GetByUserAndAddressParams) (*models.UserAddressBook, error)
	GetByUserAndAddressAllCurrencies(ctx context.Context, arg GetByUserAndAddressAllCurrenciesParams) ([]*models.UserAddressBook, error)
	GetByUserAndBlockchain(ctx context.Context, arg GetByUserAndBlockchainParams) ([]*models.UserAddressBook, error)
	GetByUserAndCurrency(ctx context.Context, arg GetByUserAndCurrencyParams) ([]*models.UserAddressBook, error)
	GetByUserID(ctx context.Context, userID uuid.UUID) ([]*models.UserAddressBook, error)
	GetTrashedEntry(ctx context.Context, arg GetTrashedEntryParams) (*models.UserAddressBook, error)
	RestoreFromTrash(ctx context.Context, arg RestoreFromTrashParams) (*models.UserAddressBook, error)
	SoftDelete(ctx context.Context, id uuid.UUID) error
	Update(ctx context.Context, arg UpdateParams) (*models.UserAddressBook, error)
}

var _ Querier = (*Queries)(nil)
