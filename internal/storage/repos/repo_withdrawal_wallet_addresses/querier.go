// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repo_withdrawal_wallet_addresses

import (
	"context"
	"github.com/dv-net/dv-merchant/internal/models"

	"github.com/google/uuid"
)

type Querier interface {
	CheckAddressExists(ctx context.Context, arg CheckAddressExistsParams) (bool, error)
	Create(ctx context.Context, arg CreateParams) (*models.WithdrawalWalletAddress, error)
	GetAddressWithCurrencyByUserID(ctx context.Context, userID uuid.UUID) ([]*GetAddressWithCurrencyByUserIDRow, error)
	GetAddresses(ctx context.Context, dollar_1 uuid.UUID) ([]*models.WithdrawalWalletAddress, error)
	GetAddressesList(ctx context.Context, dollar_1 uuid.UUID) ([]string, error)
	GetByAddress(ctx context.Context, arg GetByAddressParams) (*models.WithdrawalWalletAddress, error)
	GetByAddressWithTrashed(ctx context.Context, arg GetByAddressWithTrashedParams) (*models.WithdrawalWalletAddress, error)
	GetById(ctx context.Context, id uuid.UUID) (*models.WithdrawalWalletAddress, error)
	GetWithdrawalAddressByCurrencyID(ctx context.Context, arg GetWithdrawalAddressByCurrencyIDParams) ([]string, error)
	GetWithdrawalWalletsByBlockchain(ctx context.Context, arg GetWithdrawalWalletsByBlockchainParams) ([]string, error)
	SoftBatchDelete(ctx context.Context, id []uuid.UUID) error
	SoftDelete(ctx context.Context, id uuid.UUID) error
	SoftDeleteUnmatchedByAddress(ctx context.Context, arg SoftDeleteUnmatchedByAddressParams) error
	UpdateDeletedAddress(ctx context.Context, arg UpdateDeletedAddressParams) (*models.WithdrawalWalletAddress, error)
	UpdateList(ctx context.Context, arg []UpdateListParams) *UpdateListBatchResults
}

var _ Querier = (*Queries)(nil)
