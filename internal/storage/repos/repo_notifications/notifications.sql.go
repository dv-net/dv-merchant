// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: notifications.sql

package repo_notifications

import (
	"context"
	"github.com/dv-net/dv-merchant/internal/models"
)

const getAllTypes = `-- name: GetAllTypes :many
SELECT id, category, type FROM notifications WHERE category IS NULL
`

func (q *Queries) GetAllTypes(ctx context.Context) ([]*models.Notification, error) {
	rows, err := q.db.Query(ctx, getAllTypes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*models.Notification{}
	for rows.Next() {
		var i models.Notification
		if err := rows.Scan(&i.ID, &i.Category, &i.Type); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
