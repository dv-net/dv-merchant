// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: update_balance_queue_gen.sql

package repo_update_balance_queue

import (
	"context"

	"github.com/dv-net/dv-merchant/internal/models"
	"github.com/google/uuid"
)

const create = `-- name: Create :one
INSERT INTO update_balance_queue (currency_id, address, native_token_balance_update)
	VALUES ($1, $2, $3)
	RETURNING id, currency_id, address, native_token_balance_update, created_at, updated_at
`

type CreateParams struct {
	CurrencyID               string `db:"currency_id" json:"currency_id"`
	Address                  string `db:"address" json:"address"`
	NativeTokenBalanceUpdate bool   `db:"native_token_balance_update" json:"native_token_balance_update"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.UpdateBalanceQueue, error) {
	row := q.db.QueryRow(ctx, create, arg.CurrencyID, arg.Address, arg.NativeTokenBalanceUpdate)
	var i models.UpdateBalanceQueue
	err := row.Scan(
		&i.ID,
		&i.CurrencyID,
		&i.Address,
		&i.NativeTokenBalanceUpdate,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}

const delete = `-- name: Delete :exec
DELETE FROM update_balance_queue WHERE id=$1
`

func (q *Queries) Delete(ctx context.Context, id uuid.UUID) error {
	_, err := q.db.Exec(ctx, delete, id)
	return err
}
