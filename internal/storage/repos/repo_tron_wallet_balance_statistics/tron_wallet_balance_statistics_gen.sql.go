// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tron_wallet_balance_statistics_gen.sql

package repo_tron_wallet_balance_statistics

import (
	"context"
	"github.com/dv-net/dv-merchant/internal/models"

	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const create = `-- name: Create :one
INSERT INTO tron_wallet_balance_statistics (processing_owner_id, address, staked_bandwidth, staked_energy, delegated_energy, delegated_bandwidth, available_bandwidth, available_energy, created_at)
	VALUES ($1, $2, $3, $4, $5, $6, $7, $8, now())
	RETURNING id, processing_owner_id, address, staked_bandwidth, staked_energy, delegated_energy, delegated_bandwidth, available_bandwidth, available_energy, created_at
`

type CreateParams struct {
	ProcessingOwnerID  uuid.UUID       `db:"processing_owner_id" json:"processing_owner_id"`
	Address            string          `db:"address" json:"address"`
	StakedBandwidth    decimal.Decimal `db:"staked_bandwidth" json:"staked_bandwidth"`
	StakedEnergy       decimal.Decimal `db:"staked_energy" json:"staked_energy"`
	DelegatedEnergy    decimal.Decimal `db:"delegated_energy" json:"delegated_energy"`
	DelegatedBandwidth decimal.Decimal `db:"delegated_bandwidth" json:"delegated_bandwidth"`
	AvailableBandwidth decimal.Decimal `db:"available_bandwidth" json:"available_bandwidth"`
	AvailableEnergy    decimal.Decimal `db:"available_energy" json:"available_energy"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.TronWalletBalanceStatistic, error) {
	row := q.db.QueryRow(ctx, create,
		arg.ProcessingOwnerID,
		arg.Address,
		arg.StakedBandwidth,
		arg.StakedEnergy,
		arg.DelegatedEnergy,
		arg.DelegatedBandwidth,
		arg.AvailableBandwidth,
		arg.AvailableEnergy,
	)
	var i models.TronWalletBalanceStatistic
	err := row.Scan(
		&i.ID,
		&i.ProcessingOwnerID,
		&i.Address,
		&i.StakedBandwidth,
		&i.StakedEnergy,
		&i.DelegatedEnergy,
		&i.DelegatedBandwidth,
		&i.AvailableBandwidth,
		&i.AvailableEnergy,
		&i.CreatedAt,
	)
	return &i, err
}
