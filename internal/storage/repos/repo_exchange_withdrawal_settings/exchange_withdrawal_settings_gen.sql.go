// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: exchange_withdrawal_settings_gen.sql

package repo_exchange_withdrawal_settings

import (
	"context"
	"github.com/dv-net/dv-merchant/internal/models"

	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const create = `-- name: Create :one
INSERT INTO exchange_withdrawal_settings (user_id, exchange_id, currency, chain, address, min_amount, created_at)
	VALUES ($1, $2, $3, $4, $5, $6, now())
	RETURNING id, user_id, exchange_id, currency, chain, address, min_amount, created_at, updated_at, is_enabled
`

type CreateParams struct {
	UserID     uuid.UUID       `db:"user_id" json:"user_id"`
	ExchangeID uuid.UUID       `db:"exchange_id" json:"exchange_id"`
	Currency   string          `db:"currency" json:"currency"`
	Chain      string          `db:"chain" json:"chain"`
	Address    string          `db:"address" json:"address"`
	MinAmount  decimal.Decimal `db:"min_amount" json:"min_amount"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.ExchangeWithdrawalSetting, error) {
	row := q.db.QueryRow(ctx, create,
		arg.UserID,
		arg.ExchangeID,
		arg.Currency,
		arg.Chain,
		arg.Address,
		arg.MinAmount,
	)
	var i models.ExchangeWithdrawalSetting
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.ExchangeID,
		&i.Currency,
		&i.Chain,
		&i.Address,
		&i.MinAmount,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.IsEnabled,
	)
	return &i, err
}
