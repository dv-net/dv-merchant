// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: aml_user_keys_gen.sql

package repo_aml_user_keys

import (
	"context"
	"github.com/dv-net/dv-merchant/internal/models"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const create = `-- name: Create :one
INSERT INTO aml_user_keys (key_id, user_id, value, created_at, updated_at)
	VALUES ($1, $2, $3, now(), $4)
	RETURNING id, key_id, user_id, value, created_at, updated_at
`

type CreateParams struct {
	KeyID     uuid.UUID        `db:"key_id" json:"key_id"`
	UserID    uuid.UUID        `db:"user_id" json:"user_id"`
	Value     string           `db:"value" json:"value"`
	UpdatedAt pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.AmlUserKey, error) {
	row := q.db.QueryRow(ctx, create,
		arg.KeyID,
		arg.UserID,
		arg.Value,
		arg.UpdatedAt,
	)
	var i models.AmlUserKey
	err := row.Scan(
		&i.ID,
		&i.KeyID,
		&i.UserID,
		&i.Value,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
