// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user_exchanges_gen.sql

package repo_user_exchanges

import (
	"context"

	"github.com/dv-net/dv-merchant/internal/models"
	"github.com/google/uuid"
)

const create = `-- name: Create :one
INSERT INTO user_exchanges (exchange_id, user_id, withdrawal_state, swap_state)
	VALUES ($1, $2, $3, $4)
	RETURNING id, exchange_id, user_id, withdrawal_state, swap_state
`

type CreateParams struct {
	ExchangeID      uuid.UUID                      `db:"exchange_id" json:"exchange_id"`
	UserID          uuid.UUID                      `db:"user_id" json:"user_id"`
	WithdrawalState models.ExchangeWithdrawalState `db:"withdrawal_state" json:"withdrawal_state"`
	SwapState       models.ExchangeSwapState       `db:"swap_state" json:"swap_state"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (*models.UserExchange, error) {
	row := q.db.QueryRow(ctx, create,
		arg.ExchangeID,
		arg.UserID,
		arg.WithdrawalState,
		arg.SwapState,
	)
	var i models.UserExchange
	err := row.Scan(
		&i.ID,
		&i.ExchangeID,
		&i.UserID,
		&i.WithdrawalState,
		&i.SwapState,
	)
	return &i, err
}
