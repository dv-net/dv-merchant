basePath: /api
definitions:
  AMLKey:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  APIError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  APIErrors:
    properties:
      code:
        type: integer
      errors:
        items:
          $ref: '#/definitions/APIError'
        type: array
    type: object
  AddUserRoleRequest:
    properties:
      user_id:
        format: uuid
        type: string
      user_role:
        allOf:
        - $ref: '#/definitions/UserRole'
        enum:
        - root
        - user
    required:
    - user_id
    - user_role
    type: object
  AddUserRoleResponse:
    properties:
      user_id:
        format: uuid
        type: string
      user_roles:
        items:
          $ref: '#/definitions/UserRole'
          enum:
          - root
          - user
        type: array
    required:
    - user_id
    - user_roles
    type: object
  AddressBookEntryResponse:
    properties:
      address:
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
      currency_id:
        type: string
      id:
        type: string
      name:
        type: string
      submitted_at:
        type: string
      tag:
        type: string
      withdrawal_rule_exists:
        type: boolean
    type: object
  AddressBookEntryResponseShort:
    properties:
      currency_id:
        type: string
      id:
        type: string
      withdrawal_rule_exists:
        type: boolean
    type: object
  AddressBookListResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/AddressBookEntryResponse'
        type: array
      evm_groups:
        items:
          $ref: '#/definitions/EVMAddressGroupResponse'
        type: array
      universal_groups:
        items:
          $ref: '#/definitions/UniversalAddressGroupResponse'
        type: array
    type: object
  AmlHistoryResponse:
    properties:
      created_at:
        type: string
      external_id:
        type: string
      id:
        type: string
      request_history:
        items:
          $ref: '#/definitions/CheckHistory'
        type: array
      risk_level:
        type: string
      score:
        type: number
      service_id:
        type: string
      service_slug:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AMLSlug'
      status:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AMLCheckStatus'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  Asset:
    properties:
      amount:
        type: string
      amount_usd:
        type: string
      currency_id:
        type: string
      identity:
        type: string
    type: object
  AssetWallet:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      currency:
        type: string
      total_deposit:
        type: number
      tx_count:
        type: number
    type: object
  AuthLinkResponse:
    properties:
      link:
        type: string
    type: object
  AuthRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      remember_me:
        type: boolean
    required:
    - email
    - password
    type: object
  AuthResponse:
    properties:
      token:
        type: string
    type: object
  Balance:
    properties:
      native_token:
        type: string
      native_token_usd:
        type: string
    type: object
  BanUserResponse:
    properties:
      banned:
        type: boolean
      user_id:
        format: uuid
        type: string
    type: object
  Blockchain:
    enum:
    - arbitrum
    - bitcoin
    - bitcoincash
    - bsc
    - dogecoin
    - ethereum
    - litecoin
    - polygon
    - tron
    type: string
    x-enum-varnames:
    - BlockchainArbitrum
    - BlockchainBitcoin
    - BlockchainBitcoinCash
    - BlockchainBinanceSmartChain
    - BlockchainDogecoin
    - BlockchainEthereum
    - BlockchainLitecoin
    - BlockchainPolygon
    - BlockchainTron
  BlockchainAdditionalData:
    properties:
      evm_data:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_service_wallet.EVMData'
      tron_data:
        $ref: '#/definitions/TronData'
    type: object
  BlockchainGroup:
    properties:
      assets:
        items:
          $ref: '#/definitions/AssetWallet'
        type: array
      blockchain:
        $ref: '#/definitions/Blockchain'
    type: object
  CallbackURLResponse:
    properties:
      callback_url:
        type: string
    type: object
  ChangeEmailRequest:
    properties:
      code:
        type: string
      new_email:
        type: string
      new_email_confirmation:
        type: string
    required:
    - new_email
    type: object
  ChangePasswordInternalRequest:
    properties:
      password_new:
        format: password
        maxLength: 32
        minLength: 8
        type: string
      password_old:
        format: password
        maxLength: 32
        minLength: 8
        type: string
    required:
    - password_new
    - password_old
    type: object
  ChangeTwoFactorAuthStatusRequest:
    properties:
      otp:
        type: string
    required:
    - otp
    type: object
  CheckHistory:
    properties:
      aml_check_id:
        type: string
      attempt_number:
        type: integer
      created_at:
        type: string
      error_msg:
        type: string
      id:
        type: string
      request_payload:
        type: string
      service_response:
        type: string
      updated_at:
        type: string
    type: object
  CombinedStats:
    properties:
      available_bandwidth:
        type: number
      available_energy:
        type: number
      delegated_bandwidth:
        type: number
      delegated_energy:
        type: number
      staked_bandwidth:
        type: number
      staked_energy:
        type: number
      total_bandwidth_used:
        type: number
      total_energy_used:
        type: number
      total_trx_fee:
        type: number
      transfer_count:
        type: integer
    type: object
  ConfirmTwoFactorAuthRequest:
    properties:
      otp:
        type: string
    required:
    - otp
    type: object
  ConvertedAddressResponse:
    properties:
      address:
        type: string
      legacy:
        type: string
    type: object
  CreateProcessingWithdrawRequest:
    properties:
      address_to:
        maxLength: 255
        minLength: 16
        type: string
      amount:
        type: number
      currency_id:
        type: string
      request_id:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - address_to
    - amount
    - currency_id
    - request_id
    type: object
  CreateProcessingWithdrawalInternalRequest:
    properties:
      address_to:
        maxLength: 255
        minLength: 16
        type: string
      amount:
        type: number
      currency_id:
        type: string
      request_id:
        type: string
      totp:
        maxLength: 6
        minLength: 6
        type: string
    required:
    - address_to
    - amount
    - currency_id
    - request_id
    - totp
    type: object
  CreateSettingRequest:
    properties:
      name:
        maxLength: 255
        minLength: 2
        type: string
      otp:
        type: string
      value:
        maxLength: 255
        minLength: 0
        type: string
    required:
    - name
    type: object
  CreateStoreRequest:
    properties:
      name:
        maxLength: 32
        minLength: 2
        type: string
      site:
        maxLength: 255
        minLength: 5
        type: string
    required:
    - name
    type: object
  CreateStoreWebhookRequest:
    properties:
      enabled:
        type: boolean
      events:
        items:
          $ref: '#/definitions/WebhookEvent'
        type: array
      url:
        format: url
        type: string
    required:
    - events
    - url
    type: object
  CreateWalletExternalRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
      email:
        format: email
        type: string
      ip:
        format: ipv4
        type: string
      locale:
        type: string
      store_external_id:
        format: uuid
        type: string
    required:
    - store_external_id
    type: object
  CreateWalletExternalResponse:
    properties:
      address:
        items:
          $ref: '#/definitions/WalletAddressResponse'
        type: array
      amount_usd:
        type: string
      created_at:
        format: date-time
        type: string
      id:
        type: string
      pay_url:
        type: string
      rates:
        additionalProperties:
          type: string
        type: object
      store_external_id:
        type: string
      store_id:
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
  CreateWalletRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
      email:
        format: email
        type: string
      locale:
        type: string
      store_external_id:
        format: uuid
        type: string
      store_id:
        format: uuid
        type: string
    required:
    - store_external_id
    - store_id
    type: object
  CurrencyDTO:
    properties:
      blockchain:
        $ref: '#/definitions/Blockchain'
      code:
        type: string
      id:
        type: string
      name:
        type: string
      sort_order:
        type: integer
    type: object
  CurrencyIcon:
    properties:
      icon_128:
        type: string
      icon_512:
        type: string
      icon_svg:
        type: string
    type: object
  CurrencyRate:
    properties:
      code:
        type: string
      rate:
        type: string
      rate_source:
        type: string
    type: object
  CurrencyShort:
    properties:
      blockchain:
        $ref: '#/definitions/Blockchain'
      code:
        type: string
      id:
        type: string
      is_bitcoin_like:
        type: boolean
      is_evm_like:
        type: boolean
      name:
        type: string
      precision:
        type: integer
    type: object
  DeleteTransferRequest:
    properties:
      id:
        items:
          format: uuid
          type: string
        type: array
    required:
    - id
    type: object
  DeliveryChannel:
    enum:
    - email
    - telegram
    type: string
    x-enum-varnames:
    - EmailDeliveryChannel
    - TelegramDeliveryChannel
  DepositUpdateResponse:
    properties:
      address:
        type: string
      address_type:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AddressType'
      chain:
        type: string
      currency:
        type: string
      min_deposit_amount:
        type: string
    type: object
  EVMAddressGroupResponse:
    properties:
      address:
        type: string
      blockchains:
        items:
          $ref: '#/definitions/Blockchain'
        type: array
      currencies:
        items:
          $ref: '#/definitions/AddressBookEntryResponseShort'
        type: array
      currency_count:
        type: integer
      is_evm:
        type: boolean
      name:
        type: string
      submitted_at:
        type: string
      tag:
        type: string
    type: object
  ExchangeAsset:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      currency:
        type: string
    type: object
  ExchangeBalance:
    properties:
      balances:
        items:
          $ref: '#/definitions/ExchangeAsset'
        type: array
      total_usd:
        type: number
    type: object
  ExchangeChain:
    properties:
      chain:
        type: string
      chain_label:
        type: string
      currency_id:
        type: string
      ticker:
        type: string
      ticker_label:
        type: string
    type: object
  ExchangeCreateWithdrawalRequest:
    properties:
      address:
        type: string
      chain:
        type: string
      currency_id:
        type: string
      min_amount:
        type: string
    required:
    - address
    - chain
    - currency_id
    - min_amount
    type: object
  ExchangeGetWithdrawalsExportedRequest:
    properties:
      currency_id:
        type: string
      date_from:
        type: string
      date_to:
        type: string
      format:
        enum:
        - csv
        - xlsx
        type: string
      slug:
        type: string
    required:
    - format
    type: object
  ExchangeGetWithdrawalsRequest:
    properties:
      currency_id:
        type: string
      date_from:
        type: string
      date_to:
        type: string
      page:
        minimum: 1
        type: integer
      page_size:
        maximum: 100
        minimum: 1
        type: integer
      slug:
        type: string
    type: object
  ExchangeKeyData:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  ExchangeOrderHistoryResponse:
    properties:
      amount:
        type: string
      amount_usd:
        type: string
      client_order_id:
        type: string
      created_at:
        format: date-time
        type: string
      exchange_id:
        type: string
      exchange_order_id:
        type: string
      exchange_slug:
        type: string
      fail_reason:
        type: string
      id:
        type: string
      side:
        type: string
      status:
        type: string
      symbol:
        type: string
      user_id:
        type: string
    type: object
  ExchangePair:
    properties:
      base_symbol:
        type: string
      quote_symbol:
        type: string
      symbol:
        type: string
      type:
        type: string
    required:
    - base_symbol
    - quote_symbol
    - symbol
    - type
    type: object
  ExchangeRate:
    properties:
      from:
        type: string
      source:
        type: string
      to:
        type: string
      updated_at:
        format: date-time
        type: string
      value:
        type: string
      value_scale:
        type: string
    type: object
  ExchangeSlug:
    enum:
    - htx
    - okx
    - binance
    - bitget
    - kucoin
    - bybit
    - gate
    type: string
    x-enum-varnames:
    - ExchangeSlugHtx
    - ExchangeSlugOkx
    - ExchangeSlugBinance
    - ExchangeSlugBitget
    - ExchangeSlugKucoin
    - ExchangeSlugBybit
    - ExchangeSlugGateio
  ExchangeTestConnectionRequest:
    properties:
      credentials:
        properties:
          key:
            type: string
          passphrase:
            type: string
          secret:
            type: string
        required:
        - key
        - secret
        type: object
      slug:
        type: string
    required:
    - credentials
    - slug
    type: object
  ExchangeToggleSwapsRequest:
    properties:
      new_state:
        enum:
        - enabled
        - disabled
        type: string
    required:
    - new_state
    type: object
  ExchangeToggleWithdrawalsRequest:
    properties:
      new_state:
        enum:
        - enabled
        - disabled
        type: string
    required:
    - new_state
    type: object
  ExchangeUpdateKeyData:
    properties:
      name:
        maxLength: 255
        minLength: 1
        type: string
      value:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - name
    - value
    type: object
  ExchangeUpdateKeysRequest:
    properties:
      keys:
        items:
          $ref: '#/definitions/ExchangeUpdateKeyData'
        type: array
    required:
    - keys
    type: object
  ExchangeUpdatePairsRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/ExchangePair'
        type: array
    required:
    - pairs
    type: object
  ExchangeUserPairResponse:
    properties:
      display_name:
        type: string
    type: object
  ExchangeWithKeysResponse:
    properties:
      current_exchange:
        type: string
      exchanges:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_responses_exchange_response.ExchangeData'
        type: array
      swap_state:
        type: string
      withdrawal_state:
        type: string
    type: object
  ExchangeWithdrawalHistoryResponse:
    properties:
      address:
        type: string
      amount_native:
        type: string
      amount_usd:
        type: string
      chain:
        type: string
      created_at:
        format: date-time
        type: string
      currency_id:
        type: string
      exchange_id:
        type: string
      exchange_slug:
        type: string
      fail_reason:
        type: string
      id:
        type: string
      status:
        type: string
      tx_id:
        type: string
    type: object
  ExchangeWithdrawalSettingResponse:
    properties:
      address:
        type: string
      chain:
        type: string
      created_at:
        type: string
      currency_id:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      min_amount:
        type: number
    type: object
  ExternalExchangeBalanceResponse:
    properties:
      balances:
        items:
          $ref: '#/definitions/ExchangeAsset'
        type: array
      total_usd:
        type: number
    type: object
  FullPagingData:
    properties:
      last_page:
        type: integer
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  GetCurrencyResponse:
    properties:
      blockchain:
        type: string
      blockchain_icon:
        $ref: '#/definitions/CurrencyIcon'
      code:
        type: string
      contract_address:
        type: string
      explorer_link:
        type: string
      has_balance:
        type: boolean
      icon:
        $ref: '#/definitions/CurrencyIcon'
      id:
        type: string
      is_fiat:
        type: boolean
      min_confirmation:
        type: integer
      name:
        type: string
      precision:
        type: integer
      status:
        type: boolean
      withdrawal_min_balance:
        type: number
    type: object
  GetDepositAddressesResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/DepositUpdateResponse'
        type: array
      name:
        type: string
      slug:
        type: string
    type: object
  GetDictionariesResponse:
    properties:
      available_aml_providers:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AMLSlug'
        type: array
      available_currencies:
        items:
          $ref: '#/definitions/CurrencyShort'
        type: array
      available_rate_sources:
        items:
          type: string
        type: array
      backend_address:
        format: ipv4
        type: string
      backend_version_hash:
        type: string
      backend_version_tag:
        type: string
      general_settings:
        items:
          $ref: '#/definitions/SettingResponse'
        type: array
      processing_version_hash:
        type: string
      processing_version_tag:
        type: string
    type: object
  GetHotWalletKeysRequest:
    properties:
      exclude_wallet_address_ids:
        items:
          type: string
        type: array
      file_type:
        enum:
        - csv
        - json
        - txt
        type: string
      totp:
        type: string
      wallet_address_ids:
        items:
          type: string
        type: array
    required:
    - file_type
    - totp
    type: object
  GetLastLogsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_dto.LogDTO'
        type: array
    type: object
  GetMonitorTypesResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_responses_log_response.LogData'
        type: array
    type: object
  GetPrefetchDataResponse:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      currency:
        $ref: '#/definitions/CurrencyShort'
      from_addresses:
        items:
          type: string
        type: array
      to_addresses:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/TransferKind'
    type: object
  GetTransferResponse:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      created_at:
        format: date-time
        type: string
      currency_id:
        type: string
      from_addresses:
        items:
          type: string
        type: array
      id:
        format: uuid
        type: string
      kind:
        $ref: '#/definitions/TransferKind'
      message:
        type: string
      number:
        type: integer
      stage:
        $ref: '#/definitions/TransferStage'
      status:
        $ref: '#/definitions/TransferStatus'
      step:
        type: string
      to_addresses:
        items:
          type: string
        type: array
      tx_hash:
        type: string
      updated_at:
        format: date-time
        type: string
      user_id:
        format: uuid
        type: string
    type: object
  GetTwoFactorAuthDataResponse:
    properties:
      is_confirmed:
        type: boolean
      secret:
        type: string
    type: object
  GetUserInfoResponse:
    properties:
      created_at:
        format: date-time
        type: string
      email:
        format: email
        type: string
      email_verified_at:
        format: date-time
        type: string
      id:
        format: uuid
        type: string
      language:
        type: string
      location:
        type: string
      processing_owner_id:
        format: uuid
        type: string
      quick_start_guide_status:
        type: string
      rate_scale:
        type: number
      rate_source:
        type: string
      roles:
        items:
          $ref: '#/definitions/UserRole'
        type: array
      updated_at:
        format: date-time
        type: string
    required:
    - email
    - location
    type: object
  GetUsersResponse:
    properties:
      banned:
        type: boolean
      created_at:
        format: date-time
        type: string
      email:
        format: email
        type: string
      roles:
        items:
          enum:
          - root
          - user
          type: string
        type: array
      user_id:
        format: uuid
        type: string
    type: object
  GetWalletBalanceResponse:
    properties:
      address:
        type: string
      amount:
        type: number
      amount_usd:
        type: number
      blockchain:
        $ref: '#/definitions/Blockchain'
      currency_id:
        type: string
      dirty:
        type: boolean
      id:
        type: string
    type: object
  GetWalletByStoreRequest:
    properties:
      address:
        type: string
      amount:
        type: number
      balance_fiat_from:
        type: number
      balance_fiat_to:
        type: number
      blockchain:
        enum:
        - bitcoin
        - tron
        - ethereum
        - litecoin
        type: string
      currency_id:
        type: string
      is_sort_by_amount:
        type: boolean
      is_sort_by_balance:
        type: boolean
      page:
        minimum: 1
        type: integer
      page_size:
        maximum: 100
        minimum: 1
        type: integer
      store_ids:
        items:
          type: string
        minItems: 1
        type: array
      wallet_ids:
        items:
          type: string
        type: array
    required:
    - store_ids
    type: object
  InitProcessingResponse:
    properties:
      base_url:
        format: uri
        type: string
      processing_client_id:
        format: uuid
        type: string
      processing_client_key:
        type: string
    type: object
  InitializeProcessingRequest:
    properties:
      callback_domain:
        type: string
      host:
        description: Host (http://domain.example:574 or https://127.0.0.1:999)
        type: string
      merchant_domain:
        type: string
      merchant_pay_form_domain:
        type: string
    required:
    - callback_domain
    - host
    - merchant_domain
    - merchant_pay_form_domain
    type: object
  InviteUserWithRoleRequest:
    properties:
      email:
        format: email
        type: string
      mnemonic:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      store_ids:
        items:
          type: string
        type: array
    required:
    - email
    - mnemonic
    - role
    - store_ids
    type: object
  JSONResponse-AddUserRoleResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/AddUserRoleResponse'
      message:
        type: string
    type: object
  JSONResponse-AddressBookEntryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/AddressBookEntryResponse'
      message:
        type: string
    type: object
  JSONResponse-AddressBookListResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/AddressBookListResponse'
      message:
        type: string
    type: object
  JSONResponse-AuthLinkResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/AuthLinkResponse'
      message:
        type: string
    type: object
  JSONResponse-AuthResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/AuthResponse'
      message:
        type: string
    type: object
  JSONResponse-BanUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/BanUserResponse'
      message:
        type: string
    type: object
  JSONResponse-CallbackURLResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/CallbackURLResponse'
      message:
        type: string
    type: object
  JSONResponse-ConvertedAddressResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ConvertedAddressResponse'
      message:
        type: string
    type: object
  JSONResponse-CreateWalletExternalResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/CreateWalletExternalResponse'
      message:
        type: string
    type: object
  JSONResponse-CurrencyRate:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/CurrencyRate'
      message:
        type: string
    type: object
  JSONResponse-ExchangeBalance:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ExchangeBalance'
      message:
        type: string
    type: object
  JSONResponse-ExchangeUserPairResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ExchangeUserPairResponse'
      message:
        type: string
    type: object
  JSONResponse-ExchangeWithKeysResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ExchangeWithKeysResponse'
      message:
        type: string
    type: object
  JSONResponse-ExchangeWithdrawalHistoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ExchangeWithdrawalHistoryResponse'
      message:
        type: string
    type: object
  JSONResponse-ExchangeWithdrawalSettingResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ExchangeWithdrawalSettingResponse'
      message:
        type: string
    type: object
  JSONResponse-ExternalExchangeBalanceResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ExternalExchangeBalanceResponse'
      message:
        type: string
    type: object
  JSONResponse-ExternalProcessingWalletBalanceResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ProcessingWalletWithAssets'
        type: array
      message:
        type: string
    type: object
  JSONResponse-GetCurrencyResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/GetCurrencyResponse'
      message:
        type: string
    type: object
  JSONResponse-GetDictionariesResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/GetDictionariesResponse'
      message:
        type: string
    type: object
  JSONResponse-GetLastLogsResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/GetLastLogsResponse'
      message:
        type: string
    type: object
  JSONResponse-GetMonitorTypesResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/GetMonitorTypesResponse'
      message:
        type: string
    type: object
  JSONResponse-GetTwoFactorAuthDataResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/GetTwoFactorAuthDataResponse'
      message:
        type: string
    type: object
  JSONResponse-GetUserInfoResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/GetUserInfoResponse'
      message:
        type: string
    type: object
  JSONResponse-InitProcessingResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/InitProcessingResponse'
      message:
        type: string
    type: object
  JSONResponse-NotificationTypeListResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/NotificationTypeListResponse'
      message:
        type: string
    type: object
  JSONResponse-OwnerData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/OwnerData'
      message:
        type: string
    type: object
  JSONResponse-OwnerProcessingResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/OwnerProcessingResponse'
      message:
        type: string
    type: object
  JSONResponse-ProcessingListResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ProcessingListResponse'
      message:
        type: string
    type: object
  JSONResponse-ProcessingWithdrawalResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ProcessingWithdrawalResponse'
      message:
        type: string
    type: object
  JSONResponse-PublicGetWalletResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/PublicGetWalletResponse'
      message:
        type: string
    type: object
  JSONResponse-ReceiptResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ReceiptResponse'
      message:
        type: string
    type: object
  JSONResponse-RegisterRootResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/RegisterRootResponse'
      message:
        type: string
    type: object
  JSONResponse-RegisterUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/RegisterUserResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-AmlHistoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-AmlHistoryResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-ExchangeOrderHistoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-ExchangeOrderHistoryResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-ExchangeWithdrawalHistoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-ExchangeWithdrawalHistoryResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-GetTransferResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-GetTransferResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-GetUsersResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-GetUsersResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-GetWalletBalanceResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-GetWalletBalanceResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-NotificationHistoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-NotificationHistoryResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions_FindRow:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions_FindRow'
      message:
        type: string
    type: object
  JSONResponse-SearchByCriteriaResponse-any:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/SearchByCriteriaResponse-any'
      message:
        type: string
    type: object
  JSONResponse-SendTestResult:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/SendTestResult'
      message:
        type: string
    type: object
  JSONResponse-SettingResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/SettingResponse'
      message:
        type: string
    type: object
  JSONResponse-ShortTransactionInfoListResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ShortTransactionInfoListResponse'
      message:
        type: string
    type: object
  JSONResponse-StoreAPIKeyResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/StoreAPIKeyResponse'
      message:
        type: string
    type: object
  JSONResponse-StoreResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/StoreResponse'
      message:
        type: string
    type: object
  JSONResponse-StoreSecretResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/StoreSecretResponse'
      message:
        type: string
    type: object
  JSONResponse-StoreWebhookResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/StoreWebhookResponse'
      message:
        type: string
    type: object
  JSONResponse-StoreWhitelistResponse:
    properties:
      code:
        type: integer
      data:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  JSONResponse-SystemInfoResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/SystemInfoResponse'
      message:
        type: string
    type: object
  JSONResponse-TgLinkResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/TgLinkResponse'
      message:
        type: string
    type: object
  JSONResponse-TransactionInfoResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/TransactionInfoResponse'
      message:
        type: string
    type: object
  JSONResponse-UnbanUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/UnbanUserResponse'
      message:
        type: string
    type: object
  JSONResponse-VersionResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/VersionResponse'
      message:
        type: string
    type: object
  JSONResponse-WalletAddressTotalUSDResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WalletAddressTotalUSDResponse'
      message:
        type: string
    type: object
  JSONResponse-WalletSeedResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WalletSeedResponse'
      message:
        type: string
    type: object
  JSONResponse-WalletShort:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WalletShort'
      message:
        type: string
    type: object
  JSONResponse-WalletWithBlockchains:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WalletWithBlockchains'
      message:
        type: string
    type: object
  JSONResponse-WhHistoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WhHistoryResponse'
      message:
        type: string
    type: object
  JSONResponse-WithdrawalFromProcessingDto:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WithdrawalFromProcessingDto'
      message:
        type: string
    type: object
  JSONResponse-WithdrawalRulesByCurrencyResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/WithdrawalRulesByCurrencyResponse'
      message:
        type: string
    type: object
  JSONResponse-any:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  JSONResponse-array_AMLKey:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/AMLKey'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_CurrencyShort:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/CurrencyShort'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_DepositUpdateResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/DepositUpdateResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_ExchangeChain:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ExchangeChain'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_ExchangeRate:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ExchangeRate'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_ExchangeWithdrawalSettingResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ExchangeWithdrawalSettingResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_GetCurrencyResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/GetCurrencyResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_GetDepositAddressesResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/GetDepositAddressesResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_GetPrefetchDataResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/GetPrefetchDataResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_ProcessingWalletWithAssets:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ProcessingWalletWithAssets'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_ReceiptResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ReceiptResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_SettingResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/SettingResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_StatisticsDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/StatisticsDTO'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_StoreAPIKeyResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/StoreAPIKeyResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_StoreResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/StoreResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_StoreTransactionResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/StoreTransactionResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_StoreWebhookResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/StoreWebhookResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_SummaryDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/SummaryDTO'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_UserNotificationResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/UserNotificationResponse'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_WalletWithTransactionsInfo:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/WalletWithTransactionsInfo'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_WithdrawalWalletWithAddress:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/WithdrawalWalletWithAddress'
        type: array
      message:
        type: string
    type: object
  ? JSONResponse-array_array_github_com_dv-net_dv-merchant_internal_delivery_http_responses_exchange_response_ExchangeWithdrawalRulesResponse
  : properties:
      code:
        type: integer
      data:
        items:
          items:
            $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_responses_exchange_response.ExchangeWithdrawalRulesResponse'
          type: array
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_github_com_dv-net_dv-merchant_internal_models_ExchangeSymbolDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.ExchangeSymbolDTO'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_github_com_dv-net_dv-merchant_internal_service_setting_Dto:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_service_setting.Dto'
        type: array
      message:
        type: string
    type: object
  JSONResponse-array_string:
    properties:
      code:
        type: integer
      data:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  JSONResponse-github_com_dv-net_dv-merchant_internal_delivery_http_responses_mnemonic_response_MnemonicResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_responses_mnemonic_response.MnemonicResponse'
      message:
        type: string
    type: object
  JSONResponse-github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions_StatisticsRow:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions.StatisticsRow'
      message:
        type: string
    type: object
  JSONResponse-map_string_CombinedStats:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/map_string_CombinedStats'
      message:
        type: string
    type: object
  JSONResponse-string:
    properties:
      code:
        type: integer
      data:
        type: string
      message:
        type: string
    type: object
  LowBalanceWithdrawalRuleResponse:
    properties:
      manual_address:
        type: string
      mode:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.MultiWithdrawalMode'
    type: object
  ManualMultipleWithdrawRequest:
    properties:
      currency_id:
        type: string
      exclude_wallet_addresses_ids:
        items:
          type: string
        type: array
      wallet_address_ids:
        items:
          type: string
        type: array
      withdrawal_wallet_id:
        type: string
    type: object
  ManualWithdrawRequest:
    properties:
      currency_id:
        type: string
      wallet_address_id:
        type: string
    type: object
  MonitorTypeData:
    properties:
      created_at:
        format: date-time
        type: string
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
    type: object
  MultiWithdrawalRules:
    properties:
      manual_address:
        maxLength: 255
        minLength: 1
        type: string
      mode:
        allOf:
        - $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.MultiWithdrawalMode'
        enum:
        - random
        - disabled
        - processing
        - manual
    required:
    - mode
    type: object
  MultipleWithdrawalToProcessingRequest:
    properties:
      currency_id:
        type: string
      exclude:
        items:
          type: string
        type: array
      wallet_address_ids:
        items:
          type: string
        type: array
    required:
    - currency_id
    type: object
  NotificationHistoryResponse:
    properties:
      channel:
        $ref: '#/definitions/DeliveryChannel'
      created_at:
        type: string
      destination:
        type: string
      id:
        type: string
      message_text:
        type: string
      sender:
        type: string
      sent_at:
        type: string
      type:
        $ref: '#/definitions/NotificationType'
      updated_at:
        type: string
    type: object
  NotificationType:
    enum:
    - user_verification
    - user_registration
    - user_password_reset
    - user_forgot_password
    - two_factor_authentication
    - external_wallet_requested
    - user_invite
    - user_email_reset
    - user_change_email
    - user_access_key_changed
    - user_authorization_from_new_device
    - user_remind_verification
    - user_update_setting_verification
    - user_test_email
    - user_crypto_receipt
    type: string
    x-enum-varnames:
    - NotificationTypeUserVerification
    - NotificationTypeUserRegistration
    - NotificationTypeUserPasswordChanged
    - NotificationTypeUserForgotPassword
    - NotificationTypeTwoFactorAuthentication
    - NotificationTypeExternalWalletRequested
    - NotificationTypeUserInvite
    - NotificationTypeUserEmailReset
    - NotificationTypeUserEmailChange
    - NotificationTypeUserAccessKeyChanged
    - NotificationTypeUserAuthorizationFromNewDevice
    - NotificationTypeUserRemindVerification
    - NotificationTypeUserUpdateSetting
    - NotificationTypeUserTestEmail
    - NotificationTypeUserCryptoReceipt
  NotificationTypeListResponse:
    properties:
      types:
        items:
          properties:
            label:
              type: string
            value:
              type: string
          type: object
        type: array
    type: object
  OwnerData:
    properties:
      balance:
        type: number
      is_authorized:
        type: boolean
      owner_id:
        type: string
      telegram:
        type: string
    type: object
  OwnerProcessingResponse:
    properties:
      owner_id:
        type: string
    type: object
  PatchWhitelistRequest:
    properties:
      ip:
        format: ipv4
        type: string
    required:
    - ip
    type: object
  ProcessingListResponse:
    type: object
  ProcessingWalletWithAssets:
    properties:
      additional_data:
        $ref: '#/definitions/BlockchainAdditionalData'
      address:
        type: string
      assets:
        items:
          $ref: '#/definitions/Asset'
        type: array
      balance:
        $ref: '#/definitions/Balance'
      blockchain:
        $ref: '#/definitions/Blockchain'
      currency:
        $ref: '#/definitions/CurrencyShort'
    type: object
  ProcessingWebhook:
    properties:
      amount:
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
      confirmations:
        type: integer
      contract_address:
        type: string
      external_wallet_id:
        type: string
      fee:
        type: string
      from_address:
        type: string
      hash:
        type: string
      is_system:
        type: boolean
      kind:
        $ref: '#/definitions/WebhookKind'
      network_created_at:
        type: string
      request_id:
        type: string
      status:
        $ref: '#/definitions/TransactionStatus'
      to_address:
        type: string
      tx_uniq_key:
        type: string
      wallet_type:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.WalletType'
    type: object
  ProcessingWithdrawalResponse:
    properties:
      address_from:
        type: string
      address_to:
        type: string
      amount:
        type: string
      amount_usd:
        type: string
      created_at:
        format: date-time
        type: string
      currency_id:
        type: string
      id:
        type: string
      store_id:
        type: string
      transfer_id:
        type: string
    type: object
  PublicAcceptInviteRequest:
    properties:
      email:
        format: email
        type: string
      password:
        format: password
        maxLength: 32
        minLength: 8
        type: string
      password_confirmation:
        format: password
        maxLength: 32
        minLength: 8
        type: string
      token:
        format: uuid
        type: string
    required:
    - email
    - password
    - password_confirmation
    - token
    type: object
  PublicCurrency:
    properties:
      blockchain:
        $ref: '#/definitions/Blockchain'
      code:
        type: string
      currency_label:
        type: string
      id:
        type: string
      name:
        type: string
      token_label:
        type: string
    type: object
  PublicGetWalletResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/PublicWalletAddress'
        type: array
      rates:
        additionalProperties:
          type: string
        type: object
      store:
        $ref: '#/definitions/PublicStore'
      wallet_id:
        type: string
    type: object
  PublicResetPasswordRequest:
    properties:
      code:
        type: integer
      email:
        format: email
        type: string
      password:
        format: password
        maxLength: 32
        minLength: 8
        type: string
      password_confirmation:
        format: password
        maxLength: 32
        minLength: 8
        type: string
    required:
    - code
    - email
    - password
    - password_confirmation
    type: object
  PublicStore:
    properties:
      currency_id:
        type: string
      id:
        type: string
      minimal_payment:
        type: string
      name:
        type: string
      return_url:
        type: string
      site_url:
        type: string
      status:
        type: boolean
      success_url:
        type: string
    type: object
  PublicUserForgotPasswordRequest:
    properties:
      email:
        format: email
        type: string
    type: object
  PublicWalletAddress:
    properties:
      address:
        type: string
      currency:
        $ref: '#/definitions/PublicCurrency'
    type: object
  ReceiptResponse:
    properties:
      amount:
        type: number
      created_at:
        format: date-time
        type: string
      currency_id:
        type: string
      id:
        format: uuid
        type: string
      status:
        $ref: '#/definitions/ReceiptStatus'
      store_id:
        format: uuid
        type: string
      updated_at:
        format: date-time
        type: string
      wallet_id:
        type: string
    type: object
  ReceiptStatus:
    enum:
    - paid
    - canceled
    type: string
    x-enum-varnames:
    - ReceiptStatusPaid
    - ReceiptStatusCanceled
  RegisterOwnerInfo:
    properties:
      owner_id:
        type: string
    type: object
  RegisterRequest:
    properties:
      cf-turnstile-response:
        type: string
      email:
        type: string
      language:
        maxLength: 2
        minLength: 2
        type: string
      location:
        type: string
      mnemonic:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - language
    - location
    - password
    type: object
  RegisterRootResponse:
    properties:
      token:
        type: string
    type: object
  RegisterUserResponse:
    properties:
      token:
        type: string
      user_info:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_service_user.RegisterUserDTO'
    type: object
  ResponseWithFullPagination-AmlHistoryResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/AmlHistoryResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-ExchangeOrderHistoryResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/ExchangeOrderHistoryResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-ExchangeWithdrawalHistoryResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/ExchangeWithdrawalHistoryResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-GetTransferResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/GetTransferResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-GetUsersResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/GetUsersResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-GetWalletBalanceResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/GetWalletBalanceResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-NotificationHistoryResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/NotificationHistoryResponse'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions_FindRow:
    properties:
      items:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions.FindRow'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ScoreTxRequest:
    properties:
      currency_id:
        type: string
      direction:
        enum:
        - in
        - out
        type: string
      output_address:
        type: string
      provider_slug:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AMLSlug'
      tx_id:
        type: string
    required:
    - currency_id
    - direction
    - output_address
    - provider_slug
    - tx_id
    type: object
  SearchByCriteriaResponse-any:
    properties:
      data: {}
      search_type:
        type: string
    type: object
  SendTestResult:
    properties:
      request_body:
        type: string
      response_body:
        type: string
      response_code:
        type: integer
      response_status:
        type: string
    type: object
  SettingResponse:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  ShortTransactionInfoListResponse:
    properties:
      confirmed:
        items:
          $ref: '#/definitions/ShortTransactionResponse'
        type: array
      unconfirmed:
        items:
          $ref: '#/definitions/ShortTransactionResponse'
        type: array
    type: object
  ShortTransactionResponse:
    properties:
      amount:
        type: string
      amount_usd:
        type: string
      created_at:
        type: string
      currency_code:
        type: string
      hash:
        type: string
      type:
        type: string
    type: object
  ShortTransferDto:
    properties:
      kind:
        $ref: '#/definitions/TransferKind'
      message:
        type: string
      stage:
        $ref: '#/definitions/TransferStage'
      status:
        $ref: '#/definitions/TransferStatus'
    type: object
  StatisticsDTO:
    properties:
      date:
        format: date-time
        type: string
      details_by_currency:
        additionalProperties:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_service_transactions.CurrencyDetailsDTO'
        type: object
      sum_usd:
        type: string
      transactions_count:
        type: integer
      type:
        $ref: '#/definitions/StatisticsResolution'
    type: object
  StatisticsResolution:
    enum:
    - hour
    - day
    - week
    - month
    - quarter
    - year
    type: string
    x-enum-varnames:
    - StatisticsResolutionHour
    - StatisticsResolutionDay
    - StatisticsResolutionWeek
    - StatisticsResolutionMonth
    - StatisticsResolutionQuarter
    - StatisticsResolutionYear
  StoreAPIKeyResponse:
    properties:
      enabled:
        type: boolean
      id:
        format: uuid
        type: string
      key:
        type: string
    type: object
  StoreResponse:
    properties:
      created_at:
        format: date-time
        type: string
      currency_id:
        type: string
      id:
        format: uuid
        type: string
      minimal_payment:
        type: number
      name:
        type: string
      public_payment_form_enabled:
        type: boolean
      rate_scale:
        type: number
      rate_source:
        type: string
      return_url:
        format: uri
        type: string
      site:
        format: uri
        type: string
      status:
        type: boolean
      success_url:
        format: uri
        type: string
      user_id:
        format: uuid
        type: string
    type: object
  StoreSecretResponse:
    properties:
      secret:
        type: string
    type: object
  StoreTransactionResponse:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      bc_uniq_key:
        type: string
      blockchain:
        type: string
      currency_id:
        type: string
      fee:
        type: number
      from_address:
        type: string
      id:
        format: uuid
        type: string
      network_created_at:
        format: date-time
        type: string
      receipt_id:
        format: uuid
        type: string
      store_id:
        format: uuid
        type: string
      to_address:
        type: string
      tx_hash:
        type: string
      type:
        $ref: '#/definitions/TransactionsType'
      user_id:
        format: uuid
        type: string
      wallet_id:
        format: uuid
        type: string
      withdrawal_is_manual:
        type: boolean
    type: object
  StoreWebhookResponse:
    properties:
      enabled:
        type: boolean
      events:
        items:
          enum:
          - PaymentReceived
          - PaymentNotConfirmed
          type: string
        type: array
      id:
        format: uuid
        type: string
      url:
        description: StoreID   string    `json:"store_id" format:"uuid"`
        format: uri
        type: string
    type: object
  SummaryDTO:
    properties:
      balance:
        type: string
      balance_usd:
        type: string
      count:
        type: integer
      count_with_balance:
        type: integer
      currency:
        $ref: '#/definitions/CurrencyDTO'
    type: object
  SystemInfoResponse:
    properties:
      app_profile:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AppProfile'
      initialized:
        type: boolean
      is_captcha_enabled:
        type: boolean
      registration_state:
        type: string
      root_user_exists:
        type: boolean
      site_key:
        type: string
    type: object
  TestNotificationRequest:
    properties:
      recipient:
        type: string
    required:
    - recipient
    type: object
  TestWebhookRequest:
    properties:
      event_type:
        enum:
        - PaymentReceived
        - PaymentNotConfirmed
        - ' WithdrawalFromProcessingReceived'
        type: string
      wh_id:
        type: string
    required:
    - event_type
    - wh_id
    type: object
  TgLinkResponse:
    properties:
      link:
        type: string
    type: object
  TransactionInfoResponse:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      bc_uniq_key:
        type: string
      blockchain:
        type: string
      created_at:
        type: string
      currency_id:
        type: string
      fee:
        type: number
      from_address:
        type: string
      id:
        type: string
      is_confirmed:
        type: boolean
      network_created_at:
        type: string
      receipt_id:
        type: string
      store_id:
        type: string
      to_address:
        type: string
      tx_hash:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      wallet:
        $ref: '#/definitions/WalletInfoResponse'
      webhook_history:
        items:
          $ref: '#/definitions/WhSendHistoryResponse'
        type: array
      withdrawal_is_manual:
        type: boolean
    type: object
  TransactionStatus:
    enum:
    - waiting_confirmations
    - in_mempool
    - completed
    - failed
    type: string
    x-enum-varnames:
    - TransactionStatusWaitingConfirmations
    - TransactionStatusInMempool
    - TransactionStatusCompleted
    - TransactionStatusFailed
  TransactionsType:
    enum:
    - transfer
    - deposit
    - withdrawal_from_processing
    type: string
    x-enum-varnames:
    - TransactionsTypeTransfer
    - TransactionsTypeDeposit
    - TransactionsTypeWithdrawalFromProcessing
  TransferHistoryRequest:
    properties:
      address:
        type: string
      page:
        type: integer
      page_size:
        type: integer
    type: object
  TransferKind:
    enum:
    - from_address
    - from_processing
    type: string
    x-enum-varnames:
    - TransferKindFromAddress
    - TransferKindFromProcessing
  TransferStage:
    enum:
    - in_progress
    - failed
    - completed
    type: string
    x-enum-varnames:
    - TransferStageInProgress
    - TransferStageFailed
    - TransferStageCompleted
  TransferStatus:
    enum:
    - new
    - pending
    - processing
    - in_mempool
    - unconfirmed
    - completed
    - failed
    - frozen
    type: string
    x-enum-varnames:
    - TransferStatusNew
    - TransferStatusPending
    - TransferStatusProcessing
    - TransferStatusInMempool
    - TransferStatusUnconfirmed
    - TransferStatusCompleted
    - TransferStatusFailed
    - TransferStatusFrozen
  TransfersToggleRequest:
    properties:
      mode:
        enum:
        - enabled
        - disabled
        type: string
    type: object
  TronData:
    properties:
      available_bandwidth_for_use:
        type: string
      available_energy_for_use:
        type: string
      stacked_bandwidth:
        type: string
      stacked_bandwidth_trx:
        type: string
      stacked_energy:
        type: string
      stacked_energy_trx:
        type: string
      stacked_trx:
        type: string
      total_bandwidth:
        type: string
      total_energy:
        type: string
      total_used_bandwidth:
        type: string
      total_used_energy:
        type: string
      tron_transfer_data:
        $ref: '#/definitions/TronTransferData'
    type: object
  TronTransferData:
    properties:
      max_transfers_native:
        type: string
      max_transfers_trc20:
        type: string
    type: object
  TronTransfersTypeRequest:
    properties:
      type:
        enum:
        - burntrx
        - resources
        type: string
    type: object
  UnbanUserResponse:
    properties:
      banned:
        type: boolean
      user_id:
        format: uuid
        type: string
    required:
    - user_id
    type: object
  UniversalAddressGroupResponse:
    properties:
      address:
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
      currencies:
        items:
          $ref: '#/definitions/AddressBookEntryResponseShort'
        type: array
      currency_count:
        type: integer
      is_universal:
        type: boolean
      name:
        type: string
      submitted_at:
        type: string
      tag:
        type: string
    type: object
  UpdateAPIKeyStatusRequest:
    properties:
      status:
        type: boolean
    type: object
  UpdateAddressesListRequest:
    properties:
      addresses:
        items:
          $ref: '#/definitions/WalletAddress'
        type: array
      totp:
        type: string
    required:
    - totp
    type: object
  UpdateList:
    properties:
      list:
        items:
          properties:
            email_enabled:
              type: boolean
            id:
              type: string
            tg_enabled:
              type: boolean
          required:
          - id
          type: object
        type: array
    required:
    - list
    type: object
  UpdateStoreCurrencyRequest:
    properties:
      currency_ids:
        items:
          type: string
        type: array
    type: object
  UpdateStoreRequest:
    properties:
      currency_id:
        type: string
      minimal_payment:
        type: number
      name:
        maxLength: 32
        minLength: 2
        type: string
      public_payment_form_enabled:
        type: boolean
      rate_scale:
        type: number
      rate_source:
        type: string
      return_url:
        type: string
      site:
        type: string
      status:
        type: boolean
      success_url:
        type: string
    required:
    - name
    type: object
  UpdateStoreWebhookRequest:
    properties:
      enabled:
        type: boolean
      events:
        items:
          $ref: '#/definitions/WebhookEvent'
        type: array
      url:
        type: string
    required:
    - events
    - url
    type: object
  UpdateUserAMLKeys:
    properties:
      keys:
        items:
          $ref: '#/definitions/UserAMLKey'
        type: array
    required:
    - keys
    type: object
  UpdateUserRequest:
    properties:
      language:
        maxLength: 2
        minLength: 2
        type: string
      location:
        type: string
      rate_source:
        enum:
        - okx
        - htx
        - binance
        - bitget
        - bybit
        - gate
        - dv-min
        - dv-max
        - dv-avg
        type: string
    required:
    - language
    - location
    - rate_source
    type: object
  UpdateWhitelistRequest:
    properties:
      ips:
        items:
          format: ipv4
          type: string
        type: array
    required:
    - ips
    type: object
  UpdateWithdrawalSetting:
    properties:
      enabled:
        type: boolean
    type: object
  UpdateWithdrawalWalletsRequest:
    properties:
      interval:
        $ref: '#/definitions/WithdrawalInterval'
      low_balance_rules:
        $ref: '#/definitions/MultiWithdrawalRules'
      min_balance:
        type: number
      min_balance_usd:
        type: number
      status:
        $ref: '#/definitions/WithdrawalStatus'
    required:
    - interval
    type: object
  UserAMLKey:
    properties:
      name:
        allOf:
        - $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.AmlKeyType'
        enum:
        - access_key_id
        - access_key
        - secret_key
        - access_id
      value:
        type: string
    required:
    - name
    type: object
  UserNotificationResponse:
    properties:
      category:
        type: string
      email_enabled:
        type: boolean
      id:
        type: string
      name:
        type: string
      tg_enabled:
        type: boolean
    type: object
  UserRole:
    enum:
    - user
    - root
    - support
    - finance_manager
    type: string
    x-enum-varnames:
    - UserRoleDefault
    - UserRoleRoot
    - UserRoleSupport
    - UserRoleFinanceManager
  VersionResponse:
    properties:
      new_backend_version:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_service_updater.VersionInfo'
      new_processing_version:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_service_updater.VersionInfo'
    type: object
  WalletAddress:
    properties:
      address:
        maxLength: 100
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - address
    type: object
  WalletAddressLog:
    properties:
      created_at:
        type: string
      text:
        type: string
      text_variables:
        additionalProperties: true
        type: object
      updated_at:
        type: string
    type: object
  WalletAddressResponse:
    properties:
      address:
        type: string
      blockchain:
        type: string
      created_at:
        format: date-time
        type: string
      currency_id:
        type: string
      deleted_at:
        format: date-time
        type: string
      dirty:
        type: boolean
      id:
        type: string
      updated_at:
        format: date-time
        type: string
      user_id:
        type: string
      wallet_id:
        type: string
    type: object
  WalletAddressTotalUSDResponse:
    properties:
      total_dust:
        type: number
      total_usd:
        type: number
    type: object
  WalletInfoResponse:
    properties:
      id:
        type: string
      store_external_id:
        type: string
      wallet_created_at:
        type: string
      wallet_store_id:
        type: string
      wallet_updated_at:
        type: string
    type: object
  WalletSeedResponse:
    properties:
      mnemonic:
        type: string
      pass_phrase:
        type: string
    type: object
  WalletShort:
    properties:
      address:
        items:
          $ref: '#/definitions/WalletShort'
        type: array
      id:
        type: string
      store_external_id:
        type: string
      store_id:
        type: string
    type: object
  WalletTransactionInfo:
    properties:
      created_at:
        type: string
      currency_id:
        type: string
      from:
        type: string
      hash:
        type: string
      to:
        type: string
    type: object
  WalletWithBlockchains:
    properties:
      address:
        type: string
      blockchains:
        items:
          $ref: '#/definitions/BlockchainGroup'
        type: array
      email:
        type: string
      logs:
        items:
          $ref: '#/definitions/WalletAddressLog'
        type: array
      store_external_id:
        type: string
      store_id:
        type: string
      store_name:
        type: string
      total_tx:
        type: number
      wallet_created_at:
        type: string
      wallet_id:
        type: string
    type: object
  WalletWithTransactionsInfo:
    properties:
      address:
        type: string
      currencies:
        items:
          type: string
        type: array
      store_external_id:
        type: string
      store_uuid:
        type: string
      transactions:
        items:
          $ref: '#/definitions/WalletTransactionInfo'
        type: array
      wallet_id:
        type: string
    type: object
  WebhookEvent:
    enum:
    - PaymentReceived
    - PaymentNotConfirmed
    - WithdrawalFromProcessingReceived
    type: string
    x-enum-varnames:
    - WebhookEventPaymentReceived
    - WebhookEventPaymentNotConfirmed
    - WebhookEventWithdrawalFromProcessingReceived
  WebhookKind:
    enum:
    - transfer
    - deposit
    - transfer_status
    type: string
    x-enum-varnames:
    - WebhookKindTransfer
    - WebhookKindDeposit
    - WebhookKindTransferStatus
  WhHistory:
    properties:
      created_at:
        format: date-time
        type: string
      id:
        type: string
      is_success:
        type: boolean
      request:
        type: string
      response:
        type: string
      status_code:
        type: integer
      store_id:
        type: string
      transaction_id:
        type: string
      url:
        type: string
    type: object
  WhHistoryResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/WhHistory'
        type: array
      next_page_exists:
        type: boolean
    type: object
  WhSendHistoryResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_success:
        type: boolean
      request:
        type: string
      response:
        type: string
      status_code:
        type: integer
      store_id:
        type: string
      url:
        type: string
      wh_type:
        type: string
    type: object
  WithdrawalFromProcessingDto:
    properties:
      address_from:
        type: string
      address_to:
        type: string
      amount:
        type: number
      amount_usd:
        type: number
      created_at:
        type: string
      currency_id:
        type: string
      store_id:
        type: string
      transfer:
        $ref: '#/definitions/ShortTransferDto'
      tx_hash:
        type: string
    type: object
  WithdrawalInterval:
    enum:
    - never
    - every-one-min
    - every-12hours
    - every-day
    - every-3days
    - every-week
    type: string
    x-enum-varnames:
    - WithdrawalIntervalNever
    - WithdrawalIntervalEveryOneMin
    - WithdrawalIntervalEvery12hours
    - WithdrawalIntervalEveryDay
    - WithdrawalIntervalEvery3Days
    - WithdrawalIntervalEveryWeek
  WithdrawalRulesByCurrencyResponse:
    properties:
      addressees:
        items:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.WithdrawalWalletAddress'
        type: array
      currency:
        $ref: '#/definitions/CurrencyShort'
      id:
        type: string
      interval:
        $ref: '#/definitions/WithdrawalInterval'
      low_balance_rules:
        $ref: '#/definitions/LowBalanceWithdrawalRuleResponse'
      native_balance:
        type: number
      rate:
        type: number
      status:
        $ref: '#/definitions/WithdrawalStatus'
      usd_balance:
        type: number
    type: object
  WithdrawalStatus:
    enum:
    - enabled
    - disabled
    type: string
    x-enum-varnames:
    - WithdrawalStatusEnabled
    - WithdrawalStatusDisabled
  WithdrawalToProcessingRequest:
    properties:
      currency_id:
        type: string
      wallet_address_id:
        type: string
    required:
    - currency_id
    - wallet_address_id
    type: object
  WithdrawalWalletWithAddress:
    properties:
      addressees:
        items:
          $ref: '#/definitions/WithdrawalWalletWithAddress'
        type: array
      currency:
        $ref: '#/definitions/CurrencyShort'
      id:
        format: uuid
        type: string
      interval:
        $ref: '#/definitions/WithdrawalInterval'
      low_balance_rules:
        $ref: '#/definitions/LowBalanceWithdrawalRuleResponse'
      native_balance:
        type: number
      rate:
        type: number
      status:
        $ref: '#/definitions/WithdrawalStatus'
      usd_balance:
        type: number
    type: object
  WithdrawalWalletsTransferRequest:
    properties:
      date_from:
        format: date-time,omitempty
        type: string
      kinds:
        items:
          $ref: '#/definitions/TransferKind'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      stages:
        items:
          $ref: '#/definitions/TransferStage'
        type: array
    required:
    - stages
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_currency_request.UpdateCurrencyRateRequest:
    properties:
      rate_scale:
        type: number
      rate_source:
        enum:
        - okx htx binance bitget bybit gate dv-min dv-max dv-avg
        type: string
    required:
    - rate_scale
    - rate_source
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_processing_request.MnemonicRequest:
    properties:
      mnemonic:
        type: string
    required:
    - mnemonic
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_processing_request.UpdateProcessingCallbackDomain:
    properties:
      domain:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - domain
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_wallet_request.AddressConverterRequest:
    properties:
      address:
        maxLength: 255
        minLength: 16
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
    required:
    - address
    - blockchain
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.AddWithdrawalRuleRequest:
    properties:
      address:
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
      id:
        type: string
      is_evm:
        type: boolean
      is_universal:
        type: boolean
      totp:
        type: string
    required:
    - totp
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.CreateAddressBookRequest:
    properties:
      address:
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
      create_withdrawal_rule:
        type: boolean
      currency_id:
        type: string
      is_evm:
        type: boolean
      is_universal:
        type: boolean
      name:
        type: string
      tag:
        type: string
      totp:
        type: string
    required:
    - address
    - totp
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.DeleteAddressBookRequest:
    properties:
      address:
        type: string
      blockchain:
        $ref: '#/definitions/Blockchain'
      delete_withdrawal_rule:
        type: boolean
      id:
        type: string
      is_evm:
        type: boolean
      is_universal:
        type: boolean
      totp:
        type: string
    required:
    - totp
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.UpdateAddressBookRequest:
    properties:
      name:
        type: string
      tag:
        type: string
      totp:
        type: string
    required:
    - totp
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_responses_exchange_response.ExchangeData:
    properties:
      exchange:
        type: string
      exchange_connected_at:
        type: string
      keys:
        items:
          $ref: '#/definitions/ExchangeKeyData'
        type: array
      slug:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_responses_exchange_response.ExchangeWithdrawalRulesResponse:
    properties:
      chain:
        type: string
      currency:
        type: string
      fee:
        type: string
      max_withdraw_amount:
        type: string
      min_deposit_amount:
        type: string
      min_withdraw_amount:
        type: string
      num_of_confirmations:
        type: string
      withdraw_fee_type:
        type: string
      withdraw_precision:
        type: string
      withdraw_quota_per_day:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_responses_log_response.LogData:
    properties:
      created_at:
        type: string
      failure:
        type: boolean
      messages:
        items:
          additionalProperties: true
          type: object
        type: array
      process_id:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_delivery_http_responses_mnemonic_response.MnemonicResponse:
    properties:
      mnemonic:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_dto.LogDTO:
    properties:
      level:
        type: string
      message:
        type: string
      time:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_models.AMLCheckStatus:
    enum:
    - pending
    - success
    - failed
    type: string
    x-enum-varnames:
    - AmlCheckStatusPending
    - AmlCheckStatusSuccess
    - AmlCheckStatusFailed
  github_com_dv-net_dv-merchant_internal_models.AMLSlug:
    enum:
    - aml_bot
    - bit_ok
    type: string
    x-enum-varnames:
    - AMLSlugAMLBot
    - AMLSlugBitOK
  github_com_dv-net_dv-merchant_internal_models.AddressType:
    enum:
    - deposit
    - withdraw
    type: string
    x-enum-varnames:
    - DepositAddress
    - WithdrawAddress
  github_com_dv-net_dv-merchant_internal_models.AmlKeyType:
    enum:
    - access_key_id
    - secret_key
    - access_key
    - access_id
    type: string
    x-enum-varnames:
    - AmlKeyTypeAccessKeyID
    - AmlKeyTypeSecret
    - AmlKeyTypeAccessKey
    - AmlKeyTypeAccessID
  github_com_dv-net_dv-merchant_internal_models.AppProfile:
    enum:
    - dev
    - prod
    - demo
    type: string
    x-enum-varnames:
    - AppProfileDev
    - AppProfileProd
    - AppProfileDemo
  github_com_dv-net_dv-merchant_internal_models.ExchangeSymbolDTO:
    properties:
      base_symbol:
        type: string
      display_name:
        type: string
      quote_symbol:
        type: string
      symbol:
        type: string
      type:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_models.MultiWithdrawalMode:
    enum:
    - random
    - disabled
    - processing
    - manual
    type: string
    x-enum-varnames:
    - MultiWithdrawalModeRandom
    - MultiWithdrawalModeDisabled
    - MultiWithdrawalModeProcessing
    - MultiWithdrawalModeManual
  github_com_dv-net_dv-merchant_internal_models.RateSource:
    enum:
    - okx
    - htx
    - binance
    - bitget
    - dv-min
    - dv-max
    - dv-avg
    - kucoin
    - bybit
    - gate
    type: string
    x-enum-varnames:
    - RateSourceOKX
    - RateSourceHTX
    - RateSourceBinance
    - RateSourceBitGet
    - RateSourceDVMin
    - RateSourceDVMax
    - RateSourceDVAvg
    - RateSourceKucoin
    - RateSourceBybit
    - RateSourceGateio
  github_com_dv-net_dv-merchant_internal_models.User:
    properties:
      banned:
        $ref: '#/definitions/pgtype.Bool'
      created_at:
        type: string
      deleted_at:
        type: string
      dvnet_token:
        type: string
      email:
        type: string
      email_verified_at:
        type: string
      exchange_slug:
        $ref: '#/definitions/ExchangeSlug'
      id:
        type: string
      language:
        type: string
      location:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      processing_owner_id:
        type: string
      rate_scale:
        type: number
      rate_source:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.RateSource'
      remember_token:
        type: string
      updated_at:
        type: string
    required:
    - email
    - location
    - password
    type: object
  github_com_dv-net_dv-merchant_internal_models.WalletType:
    enum:
    - cold
    - hot
    - processing
    type: string
    x-enum-varnames:
    - WalletTypeCold
    - WalletTypeHot
    - WalletTypeProcessing
  github_com_dv-net_dv-merchant_internal_models.WithdrawalWalletAddress:
    properties:
      address:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      withdrawal_wallet_id:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_service_setting.Dto:
    properties:
      available_values:
        items:
          type: string
        type: array
      is_editable:
        type: boolean
      name:
        type: string
      two_factor_verification_required:
        type: boolean
      value:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_service_transactions.CurrencyDetailsDTO:
    properties:
      sum_usd:
        type: number
      tx_count:
        type: integer
    type: object
  github_com_dv-net_dv-merchant_internal_service_updater.VersionInfo:
    properties:
      available_version:
        type: string
      installed_version:
        type: string
      name:
        type: string
      need_for_update:
        type: boolean
    type: object
  github_com_dv-net_dv-merchant_internal_service_user.RegisterUserDTO:
    properties:
      owner_info:
        $ref: '#/definitions/RegisterOwnerInfo'
      user:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_models.User'
    type: object
  github_com_dv-net_dv-merchant_internal_service_wallet.EVMData:
    properties:
      cost_per_erc20:
        description: Cost in Wei for single ERC20 transfer
        type: string
      cost_per_native:
        description: Cost in Wei for single native transfer
        type: string
      is_l2:
        description: Whether this is an L2 chain
        type: boolean
      l1_data_fee_estimate:
        description: Estimated L1 data fee for L2 chains
        type: string
      max_transfers_erc20:
        type: string
      max_transfers_native:
        type: string
      suggested_gas_price:
        type: string
    type: object
  github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions.FindRow:
    properties:
      amount:
        type: number
      amount_usd:
        type: number
      bc_uniq_key:
        type: string
      blockchain:
        type: string
      created_at:
        type: string
      created_at_index:
        $ref: '#/definitions/pgtype.Int8'
      currency:
        properties:
          blockchain:
            $ref: '#/definitions/Blockchain'
          code:
            type: string
          id:
            type: string
          name:
            type: string
        type: object
      currency_id:
        type: string
      fee:
        type: number
      from_address:
        type: string
      id:
        type: string
      is_system:
        type: boolean
      network_created_at:
        type: string
      receipt_id:
        type: string
      store_id:
        type: string
      to_address:
        type: string
      tx_hash:
        type: string
      type:
        $ref: '#/definitions/TransactionsType'
      untrusted_email:
        type: string
      updated_at:
        type: string
      user_email:
        type: string
      user_id:
        type: string
      wallet_id:
        type: string
      withdrawal_is_manual:
        type: boolean
    type: object
  github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions.Resolution:
    enum:
    - hour
    - day
    type: string
    x-enum-varnames:
    - ResolutionHour
    - ResolutionDay
  github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions.StatisticsRow:
    properties:
      amount_usd:
        type: number
      currency_ids:
        items:
          type: string
        type: array
      date:
        type: string
      resolution:
        $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions.Resolution'
    type: object
  map_string_CombinedStats:
    additionalProperties:
      $ref: '#/definitions/CombinedStats'
    type: object
  pgtype.Bool:
    properties:
      bool:
        type: boolean
      valid:
        type: boolean
    type: object
  pgtype.Int8:
    properties:
      int64:
        type: integer
      valid:
        type: boolean
    type: object
info:
  contact:
    email: support@dv.net
    name: DV Support
  description: This is an API for DV Merchant
  title: DV Merchant
  version: "1.0"
paths:
  /v1/admin/ban:
    patch:
      consumes:
      - application/json
      description: Issue ban to user
      parameters:
      - format: uuid
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-BanUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Issue ban to user
      tags:
      - Admin
  /v1/admin/invite:
    post:
      consumes:
      - application/json
      description: Invite user with role
      parameters:
      - description: Invite user with specific role
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/InviteUserWithRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Invite user with role
      tags:
      - Admin
  /v1/admin/role:
    delete:
      consumes:
      - application/json
      description: Request to remove user role
      parameters:
      - format: uuid
        in: query
        name: user_id
        required: true
        type: string
      - enum:
        - user
        - root
        - support
        - finance_manager
        in: query
        name: user_role
        required: true
        type: string
        x-enum-varnames:
        - UserRoleDefault
        - UserRoleRoot
        - UserRoleSupport
        - UserRoleFinanceManager
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Remove user role
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Request to add user role
      parameters:
      - description: AddUserRoleRequest
        in: body
        name: string
        required: true
        schema:
          $ref: '#/definitions/AddUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-AddUserRoleResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Add user role
      tags:
      - Admin
  /v1/admin/unban:
    patch:
      consumes:
      - application/json
      description: Unban user
      parameters:
      - format: uuid
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-UnbanUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Unban user
      tags:
      - Admin
  /v1/admin/users:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - enum:
        - root
        - user
        in: query
        name: roles
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-GetUsersResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - Admin
  /v1/dv-admin/2fa/:
    get:
      consumes:
      - application/json
      description: Fetches the secret needed for setting up Time-based One-Time Password
        (TOTP).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetTwoFactorAuthDataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Retrieve 2FA authentication secret
      tags:
      - 2fa
  /v1/dv-admin/2fa/confirm:
    post:
      consumes:
      - application/json
      description: Validates the provided TOTP code against the stored secret to activate
        2FA.
      parameters:
      - description: Confirmation data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ConfirmTwoFactorAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Confirm 2FA authentication
      tags:
      - 2fa
  /v1/dv-admin/2fa/disable:
    post:
      consumes:
      - application/json
      description: Deactivates 2FA, effectively removing the current TOTP secret.
      parameters:
      - description: Status data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ChangeTwoFactorAuthStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Disable 2FA authentication
      tags:
      - 2fa
  /v1/dv-admin/aml/{aml_provider_slug}/currencies:
    get:
      consumes:
      - application/json
      description: Get supported by AML-provider currencies
      parameters:
      - description: AML-provider slug
        in: path
        name: aml_provider_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_CurrencyShort'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get supported by AML-provider currencies
      tags:
      - AML
  /v1/dv-admin/aml/{aml_provider_slug}/keys:
    delete:
      consumes:
      - application/json
      description: Delete AML-provider user keys
      parameters:
      - description: AML-provider slug
        in: path
        name: aml_provider_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Delete AML-provider keys
      tags:
      - AML
    get:
      consumes:
      - application/json
      description: Get AML-provider user keys
      parameters:
      - description: AML-provider slug
        in: path
        name: aml_provider_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_AMLKey'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get AML-provider keys
      tags:
      - AML
    post:
      consumes:
      - application/json
      description: Update or create AML-provider user keys
      parameters:
      - description: AML-provider slug
        in: path
        name: aml_provider_slug
        required: true
        type: string
      - description: Update AML keys
        in: body
        name: update_keys
        required: true
        schema:
          $ref: '#/definitions/UpdateUserAMLKeys'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update AML-provider keys
      tags:
      - AML
  /v1/dv-admin/aml/history:
    get:
      consumes:
      - application/json
      description: Get AML-provider checks history
      parameters:
      - description: AML-provider slug
        in: path
        name: aml_provider_slug
        required: true
        type: string
      - in: query
        name: date_from
        type: string
      - in: query
        name: date_to
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - enum:
        - aml_bot
        - bit_ok
        in: query
        name: provider_slug
        type: string
        x-enum-varnames:
        - AMLSlugAMLBot
        - AMLSlugBitOK
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-AmlHistoryResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get AML-provider checks history
      tags:
      - AML
  /v1/dv-admin/aml/score-transaction:
    post:
      consumes:
      - application/json
      description: Score transaction in specific AML-provider
      parameters:
      - description: Score transaction
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ScoreTxRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Score transaction in specific AML-provider
      tags:
      - AML
  /v1/dv-admin/auth/login:
    post:
      consumes:
      - application/json
      description: Auth a user
      parameters:
      - description: Register account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Auth user
      tags:
      - Auth
  /v1/dv-admin/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-RegisterUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Register user
      tags:
      - Auth
  /v1/dv-admin/auth/register-root:
    post:
      consumes:
      - application/json
      description: Register root user - available only for first user
      parameters:
      - description: Register account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-RegisterRootResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Register root user
      tags:
      - Auth
  /v1/dv-admin/console/auth-link:
    get:
      description: Get link for auth in dvnet
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-AuthLinkResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get link for auth in dvnet
      tags:
      - DVnet
  /v1/dv-admin/console/owner-data:
    get:
      description: Get system information about initialization, root user existence,
        registration status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-OwnerData'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get system information
      tags:
      - System
  /v1/dv-admin/currencies:
    get:
      consumes:
      - application/json
      description: Get all Currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_GetCurrencyResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get all Currencies
      tags:
      - Currency
  /v1/dv-admin/currencies/{id}:
    get:
      consumes:
      - application/json
      description: Get Currency by ID
      parameters:
      - description: Currency ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetCurrencyResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get Currency by ID
      tags:
      - Currency
  /v1/dv-admin/currencies/rate/:
    put:
      consumes:
      - application/json
      description: Get Currency rate
      parameters:
      - description: Rate scale
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_currency_request.UpdateCurrencyRateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get Currency rate
      tags:
      - Currency
  /v1/dv-admin/currencies/rate/{source}:
    get:
      consumes:
      - application/json
      description: Get Currency rate
      parameters:
      - description: Currency Source example binance
        in: path
        name: source
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_ExchangeRate'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get Currency rate
      tags:
      - Currency
  /v1/dv-admin/deposit/summary/:
    get:
      consumes:
      - application/json
      description: Load user deposits summary
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: currency_ids
        type: array
      - format: date-time
        in: query
        name: date_from
        type: string
      - format: date-time
        in: query
        name: date_to
        type: string
      - enum:
        - hour
        - day
        - week
        - month
        - quarter
        - year
        in: query
        name: resolution
        type: string
        x-enum-varnames:
        - StatisticsResolutionHour
        - StatisticsResolutionDay
        - StatisticsResolutionWeek
        - StatisticsResolutionMonth
        - StatisticsResolutionQuarter
        - StatisticsResolutionYear
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: store_uuids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_StatisticsDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get deposits summary
      tags:
      - Statistics
  /v1/dv-admin/dictionaries/:
    get:
      consumes:
      - application/json
      description: Dictionaries load
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetDictionariesResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Dictionaries load
      tags:
      - Dictionary
  /v1/dv-admin/exchange/:slug/balance:
    get:
      description: Get exchange balances
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExchangeBalance'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get exchange balances
      tags:
      - Exchange
  /v1/dv-admin/exchange/:slug/keys:
    delete:
      consumes:
      - application/json
      description: Delete exchange user keys
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Delete exchange keys
      tags:
      - Exchange
    post:
      consumes:
      - application/json
      description: Update or create exchange user keys
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      - description: Update exchange keys
        in: body
        name: update_keys
        required: true
        schema:
          $ref: '#/definitions/ExchangeUpdateKeysRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update exchange keys
      tags:
      - Exchange
  /v1/dv-admin/exchange/:slug/set:
    post:
      consumes:
      - application/json
      description: Set current exchange
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Set current exchange
      tags:
      - Exchange
  /v1/dv-admin/exchange/:slug/test:
    get:
      description: Route for ensure exchange correct set up
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Test exchange
      tags:
      - Exchange
  /v1/dv-admin/exchange/:slug/user-pairs:
    get:
      description: Get user exchange pairs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExchangeUserPairResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get user exchange pairs
      tags:
      - Exchange
    put:
      consumes:
      - application/json
      description: Update user exchange pairs
      parameters:
      - description: Update exchange pairs
        in: body
        name: update_pairs
        required: true
        schema:
          $ref: '#/definitions/ExchangeUpdatePairsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Update user exchange pairs
      tags:
      - Exchange
  /v1/dv-admin/exchange/list:
    get:
      consumes:
      - application/json
      description: Get all available exchanges with keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExchangeWithKeysResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: List exchanges
      tags:
      - Exchange
  /v1/dv-admin/exchange/test:
    post:
      consumes:
      - application/json
      description: Test exchange API connection with provided credentials
      parameters:
      - description: Test connection request
        in: body
        name: test_connection
        required: true
        schema:
          $ref: '#/definitions/ExchangeTestConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Test exchange API connection
      tags:
      - Exchange
  /v1/dv-admin/logs:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetMonitorTypesResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get available logs types
      tags:
      - Logs
  /v1/dv-admin/logs/{slug}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Monitor UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetMonitorTypesResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get logs by slug
      tags:
      - Logs
  /v1/dv-admin/logs/last:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetLastLogsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get last logs
      tags:
      - Logs
  /v1/dv-admin/logs/last-processing:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetLastLogsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get last processing logs
      tags:
      - Logs
  /v1/dv-admin/notifications/history:
    get:
      consumes:
      - application/json
      description: Get paginated notification history for the authenticated user with
        filtering options
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - collectionFormat: csv
        description: Notification types to filter by
        in: query
        items:
          enum:
          - user_verification
          - user_registration
          - user_password_reset
          - user_forgot_password
          - two_factor_authentication
          - external_wallet_requested
          - user_invite
          - user_email_reset
          - user_change_email
          - user_access_key_changed
          - user_authorization_from_new_device
          - user_remind_verification
          - user_update_setting_verification
          - user_test_email
          - user_crypto_receipt
          type: string
        name: types
        type: array
      - collectionFormat: csv
        description: Delivery channels to filter by
        in: query
        items:
          enum:
          - email
          - telegram
          type: string
        name: channels
        type: array
      - description: Filter from created date (RFC3339 format)
        in: query
        name: created_from
        type: string
      - description: Filter to created date (RFC3339 format)
        in: query
        name: created_to
        type: string
      - description: Filter from sent date (RFC3339 format)
        in: query
        name: sent_from
        type: string
      - description: Filter to sent date (RFC3339 format)
        in: query
        name: sent_to
        type: string
      - collectionFormat: csv
        description: Notification UUIDs to filter by
        in: query
        items:
          type: string
        name: ids
        type: array
      - collectionFormat: csv
        description: Destinations to filter by
        in: query
        items:
          type: string
        name: destinations
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-NotificationHistoryResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get user notification history
      tags:
      - Notifications
  /v1/dv-admin/notifications/types:
    get:
      consumes:
      - application/json
      description: Get available notification types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-NotificationTypeListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get available notification types
      tags:
      - Notifications
  /v1/dv-admin/processing/callback:
    post:
      consumes:
      - application/json
      description: Processing callback
      parameters:
      - description: Processing webhook
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ProcessingWebhook'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Processing callback
      tags:
      - Processing
  /v1/dv-admin/processing/callback-url:
    get:
      description: Update callback URL from processing to backend
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CallbackURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update callback URL from processing to backend
      tags:
      - Processing
    post:
      consumes:
      - application/json
      description: Update callback URL from processing to backend
      parameters:
      - description: Chang processing callback domain
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_processing_request.UpdateProcessingCallbackDomain'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update callback URL from processing to backend
      tags:
      - Processing
  /v1/dv-admin/processing/init:
    post:
      consumes:
      - application/json
      description: Perform processing registration
      parameters:
      - description: Initialize processing
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/InitializeProcessingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-InitProcessingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Register in processing
      tags:
      - Processing
  /v1/dv-admin/processing/list:
    get:
      description: Get available processing addresses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProcessingListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get available processing
      tags:
      - Processing
  /v1/dv-admin/processing/register-owner:
    post:
      consumes:
      - application/json
      description: Registers a root user in the processing system using provided mnemonic
      parameters:
      - description: Mnemonic to register root user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_processing_request.MnemonicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-OwnerProcessingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Register root user in processing
      tags:
      - Processing
  /v1/dv-admin/processing/wallets:
    get:
      description: Get available processing wallets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_ProcessingWalletWithAssets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get available processing wallets
      tags:
      - Processing
  /v1/dv-admin/receipts/:
    get:
      consumes:
      - application/json
      description: Load receipts
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_ReceiptResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load receipts
      tags:
      - Receipt
  /v1/dv-admin/receipts/{id}:
    get:
      consumes:
      - application/json
      description: Load receipt
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ReceiptResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load receipt
      tags:
      - Receipt
  /v1/dv-admin/root-setting/:
    post:
      consumes:
      - application/json
      description: Create or update root settings
      parameters:
      - description: Create or update root setting
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateSettingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create or update root settings
      tags:
      - Setting
  /v1/dv-admin/search/{searchParam}:
    get:
      consumes:
      - application/json
      description: Search tx or wallet information in system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-SearchByCriteriaResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get wallet/tx data
      tags:
      - Search
  /v1/dv-admin/setting/:
    get:
      consumes:
      - application/json
      description: Get root settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_SettingResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get root settings
      tags:
      - Setting
  /v1/dv-admin/setting/list:
    get:
      consumes:
      - application/json
      description: List available root settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_github_com_dv-net_dv-merchant_internal_service_setting_Dto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: List available root settings
      tags:
      - Setting
  /v1/dv-admin/store-setting/{id}:
    post:
      consumes:
      - application/json
      description: Create or update store settings
      parameters:
      - description: Create or update store setting
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateSettingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create or update store settings
      tags:
      - Setting
  /v1/dv-admin/store-setting/{id}/{setting_name}:
    get:
      description: Get store setting value
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-SettingResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get store setting value
      tags:
      - Setting
  /v1/dv-admin/store-setting/list/{id}:
    get:
      consumes:
      - application/json
      description: List available store settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_github_com_dv-net_dv-merchant_internal_service_setting_Dto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: List available store settings
      tags:
      - Setting
  /v1/dv-admin/store/:
    get:
      consumes:
      - application/json
      description: Load all user store
      parameters:
      - description: Create store
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_StoreResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get store
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: Create new store
      parameters:
      - description: Create store
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create store
      tags:
      - Store
  /v1/dv-admin/store/{id}:
    get:
      consumes:
      - application/json
      description: Load store
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store
      tags:
      - Store
    put:
      consumes:
      - application/json
      description: Update user store
      parameters:
      - description: Update store
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update store
      tags:
      - Store
  /v1/dv-admin/store/{id}/apikey:
    post:
      consumes:
      - application/json
      description: Create store api key
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreAPIKeyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create store api key
      tags:
      - Store
  /v1/dv-admin/store/{id}/apikey/:
    get:
      consumes:
      - application/json
      description: Load store api key
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_StoreAPIKeyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store api key
      tags:
      - Store
  /v1/dv-admin/store/{id}/apikey/{apiKeyId}:
    delete:
      consumes:
      - application/json
      description: Delete store api key status
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Apikey ID
        in: path
        name: apiKeyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete store api key status
      tags:
      - Store
  /v1/dv-admin/store/{id}/apikey/{apiKeyId}/status:
    put:
      consumes:
      - application/json
      description: Update store api key status
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Apikey ID
        in: path
        name: apiKeyId
        required: true
        type: string
      - description: Update status store api key
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateAPIKeyStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreAPIKeyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update store api key status
      tags:
      - Store
  /v1/dv-admin/store/{id}/archive:
    post:
      consumes:
      - application/json
      description: Delete store
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete store
      tags:
      - Store
  /v1/dv-admin/store/{id}/currencies/:
    get:
      consumes:
      - application/json
      description: Load store currency
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store currency
      tags:
      - Store
    put:
      consumes:
      - application/json
      description: Update store currency
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Update store currency
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateStoreCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update store currency
      tags:
      - Store
  /v1/dv-admin/store/{id}/secret:
    delete:
      consumes:
      - application/json
      description: Remove store webhook secret
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Remove store webhook secret
      tags:
      - Store
    get:
      description: Fetch store webhook secret
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreSecretResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Fetch store webhook secret
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: Generate store webhook secret
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreSecretResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Generate store webhook secret
      tags:
      - Store
  /v1/dv-admin/store/{id}/transactions/:
    get:
      consumes:
      - application/json
      description: Load store transactions
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_StoreTransactionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store transactions
      tags:
      - Store
  /v1/dv-admin/store/{id}/unarchive:
    post:
      consumes:
      - application/json
      description: Delete store
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete store
      tags:
      - Store
  /v1/dv-admin/store/{id}/webhooks/:
    get:
      consumes:
      - application/json
      description: Load store webhooks
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_StoreWebhookResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store webhooks
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: Create store webhooks
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Create store webhook
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateStoreWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreWebhookResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create store webhooks
      tags:
      - Store
  /v1/dv-admin/store/{id}/webhooks/{webhookId}:
    delete:
      consumes:
      - application/json
      description: Delete store webhooks
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Webhook ID
        in: path
        name: webhookId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete store webhooks
      tags:
      - Store
    get:
      consumes:
      - application/json
      description: Load store webhook
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Webhook ID
        in: path
        name: webhookId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreWebhookResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store webhook
      tags:
      - Store
    put:
      consumes:
      - application/json
      description: Update store webhooks
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Webhook ID
        in: path
        name: webhookId
        required: true
        type: string
      - description: Create store webhook
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateStoreWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreWebhookResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update store webhooks
      tags:
      - Store
  /v1/dv-admin/store/{id}/whitelists/:
    get:
      consumes:
      - application/json
      description: Load store whitelist
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreWhitelistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load store whitelist
      tags:
      - Store
    patch:
      consumes:
      - application/json
      description: Patch store whitelist
      parameters:
      - description: Patch store whitelist
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/PatchWhitelistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-StoreWhitelistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Patch store whitelist
      tags:
      - Store
    put:
      consumes:
      - application/json
      description: Update store whitelist
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Update store whitelist
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateWhitelistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update store whitelist
      tags:
      - Store
  /v1/dv-admin/store/archived/list:
    get:
      consumes:
      - application/json
      description: Archived stores list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Archived stores list
      tags:
      - Store
  /v1/dv-admin/system/info:
    get:
      description: Get system information about initialization, root user existence,
        registration status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-SystemInfoResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get system information
      tags:
      - System
  /v1/dv-admin/system/update/backend:
    post:
      description: Update backend
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update backend
      tags:
      - System
  /v1/dv-admin/system/update/processing:
    post:
      description: Update processing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update processing
      tags:
      - System
  /v1/dv-admin/system/version:
    get:
      consumes:
      - application/json
      description: Application versions info with no cache
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-VersionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Application versions info with no cache
      tags:
      - System
  /v1/dv-admin/transaction/:
    get:
      consumes:
      - application/json
      description: Load user transactions
      parameters:
      - enum:
        - arbitrum
        - bitcoin
        - bitcoincash
        - bsc
        - dogecoin
        - ethereum
        - litecoin
        - polygon
        - tron
        in: query
        name: blockchain
        type: string
        x-enum-varnames:
        - BlockchainArbitrum
        - BlockchainBitcoin
        - BlockchainBitcoinCash
        - BlockchainBinanceSmartChain
        - BlockchainDogecoin
        - BlockchainEthereum
        - BlockchainLitecoin
        - BlockchainPolygon
        - BlockchainTron
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: currencies
        type: array
      - format: date-time
        in: query
        name: date_from
        type: string
      - format: date-time
        in: query
        name: date_to
        type: string
      - in: query
        name: from_address
        type: string
      - in: query
        name: is_system
        type: boolean
      - in: query
        name: min_amount_usd
        type: number
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - enum:
        - created_at_index
        - amount_usd
        - tx_hash
        - user_email
        in: query
        name: sort_by
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: sort_direction
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: store_uuids
        type: array
      - in: query
        name: to_address
        type: string
      - enum:
        - transfer
        - deposit
        - withdrawal_from_processing
        in: query
        name: type
        type: string
        x-enum-varnames:
        - TransactionsTypeTransfer
        - TransactionsTypeDeposit
        - TransactionsTypeWithdrawalFromProcessing
      - in: query
        name: wallet_address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions_FindRow'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load user transactions
      tags:
      - Transaction
  /v1/dv-admin/transaction/{hash}:
    get:
      consumes:
      - application/json
      description: 'Search transactions by hash **Deprecated**: Use `/v1/dv-admin/search/:searchParam
        instead'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-TransactionInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Search transactions by hash
      tags:
      - Transaction
  /v1/dv-admin/transaction/{id}/send-webhooks:
    post:
      consumes:
      - application/json
      description: Send webhook manually. Accepts confirmed/unconfirmed tx
      parameters:
      - description: Transaction id
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Send webhook
      tags:
      - StoreWebhook
  /v1/dv-admin/transaction/export:
    get:
      consumes:
      - application/json
      description: Download user transactions
      parameters:
      - enum:
        - arbitrum
        - bitcoin
        - bitcoincash
        - bsc
        - dogecoin
        - ethereum
        - litecoin
        - polygon
        - tron
        in: query
        name: blockchain
        type: string
        x-enum-varnames:
        - BlockchainArbitrum
        - BlockchainBitcoin
        - BlockchainBitcoinCash
        - BlockchainBinanceSmartChain
        - BlockchainDogecoin
        - BlockchainEthereum
        - BlockchainLitecoin
        - BlockchainPolygon
        - BlockchainTron
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: currencies
        type: array
      - format: date-time
        in: query
        name: date_from
        type: string
      - format: date-time
        in: query
        name: date_to
        type: string
      - in: query
        name: from_address
        type: string
      - in: query
        name: is_system
        type: boolean
      - in: query
        name: min_amount_usd
        type: number
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - enum:
        - created_at_index
        - amount_usd
        - tx_hash
        - user_email
        in: query
        name: sort_by
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: sort_direction
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: store_uuids
        type: array
      - in: query
        name: to_address
        type: string
      - enum:
        - transfer
        - deposit
        - withdrawal_from_processing
        in: query
        name: type
        type: string
        x-enum-varnames:
        - TransactionsTypeTransfer
        - TransactionsTypeDeposit
        - TransactionsTypeWithdrawalFromProcessing
      - in: query
        name: wallet_address
        type: string
      produces:
      - application/json
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Download user transactions
      tags:
      - Transaction
  /v1/dv-admin/transaction/stats:
    get:
      consumes:
      - application/json
      description: Load user transactions statistic by date
      parameters:
      - enum:
        - arbitrum
        - bitcoin
        - bitcoincash
        - bsc
        - dogecoin
        - ethereum
        - litecoin
        - polygon
        - tron
        in: query
        name: blockchain
        type: string
        x-enum-varnames:
        - BlockchainArbitrum
        - BlockchainBitcoin
        - BlockchainBitcoinCash
        - BlockchainBinanceSmartChain
        - BlockchainDogecoin
        - BlockchainEthereum
        - BlockchainLitecoin
        - BlockchainPolygon
        - BlockchainTron
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: currencies
        type: array
      - format: date-time
        in: query
        name: date_from
        type: string
      - format: date-time
        in: query
        name: date_to
        type: string
      - in: query
        name: is_system
        type: boolean
      - in: query
        name: min_amount_usd
        type: number
      - enum:
        - day
        - hour
        in: query
        name: resolution
        required: true
        type: string
      - enum:
        - transfer
        - deposit
        - withdrawal_from_processing
        in: query
        name: type
        type: string
        x-enum-varnames:
        - TransactionsTypeTransfer
        - TransactionsTypeDeposit
        - TransactionsTypeWithdrawalFromProcessing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-github_com_dv-net_dv-merchant_internal_storage_repos_repo_transactions_StatisticsRow'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Load user transactions statistic by date
      tags:
      - Transaction
  /v1/dv-admin/transfer/:
    delete:
      consumes:
      - application/json
      description: This endpoint for removal action of transfers by ids
      parameters:
      - description: Delete Transfer Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/DeleteTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete transfers by ids
      tags:
      - Transfers
    get:
      consumes:
      - application/json
      description: This endpoint for filter transfer by status
      parameters:
      - description: Transfer Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/WithdrawalWalletsTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-GetTransferResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get transfer by status
      tags:
      - Transfers
  /v1/dv-admin/transfer/history:
    get:
      consumes:
      - application/json
      description: This endpoint for get transfer history
      parameters:
      - description: Transfer History Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/TransferHistoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-GetTransferResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get transfer history
      tags:
      - Transfers
  /v1/dv-admin/transfer/mode:
    post:
      consumes:
      - application/json
      description: This endpoint for on/off transfer
      parameters:
      - description: Transfer Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/TransfersToggleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Disable or enable transfers
      tags:
      - Transfers
  /v1/dv-admin/transfer/prefetch:
    get:
      consumes:
      - application/json
      description: This endpoint for get prefetch transfer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_GetPrefetchDataResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get prefetch Transfers
      tags:
      - Transfers
  /v1/dv-admin/transfer/tron/transfer-type:
    post:
      consumes:
      - application/json
      description: This endpoint for update transfer type by resources or burntrx
      parameters:
      - description: Tron Transfers Type Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/TronTransfersTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-SettingResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update tron transfer type
      tags:
      - Transfers
  /v1/dv-admin/tron/resource-expenses/:
    get:
      consumes:
      - application/json
      description: Retrieves aggregated statistics for Tron wallet balances, transfer
        expenses, and deposit counts for a user over a specified date range.
      parameters:
      - description: Start date (YYYY-MM-DD)
        example: '"2025-06-17"'
        in: query
        name: date_from
        type: string
      - description: End date (YYYY-MM-DD)
        example: '"2025-06-24"'
        in: query
        name: date_to
        type: string
      - description: day/hour
        example: '"hour"'
        in: query
        name: resolution
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with statistics
          schema:
            $ref: '#/definitions/JSONResponse-map_string_CombinedStats'
        "400":
          description: Invalid request parameters or processing error
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: 'Unauthorized: Invalid or missing Bearer token'
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get Tron resource and deposit statistics
      tags:
      - Statistics
  /v1/dv-admin/user:
    get:
      consumes:
      - application/json
      description: Auth a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Auth user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: Update user info
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - User
  /v1/dv-admin/user-setting/:
    post:
      consumes:
      - application/json
      description: Create or update root settings
      parameters:
      - description: Create or update user setting
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateSettingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create or update root settings
      tags:
      - Setting
  /v1/dv-admin/user-setting/{setting_name}:
    get:
      description: Get setting value
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-SettingResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get setting value
      tags:
      - Setting
  /v1/dv-admin/user-setting/list:
    get:
      consumes:
      - application/json
      description: List available user settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_github_com_dv-net_dv-merchant_internal_service_setting_Dto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: List available user settings
      tags:
      - Setting
  /v1/dv-admin/user/change-email:
    post:
      consumes:
      - application/json
      description: Change email
      parameters:
      - description: Confirm email
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ChangeEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Change email
      tags:
      - User
  /v1/dv-admin/user/change-password:
    post:
      consumes:
      - application/json
      description: Update user password
      parameters:
      - description: Update user password
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordInternalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update user password
      tags:
      - User
  /v1/dv-admin/user/email-confirmation:
    post:
      consumes:
      - application/json
      description: Auth a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Auth user
      tags:
      - User
  /v1/dv-admin/user/init-email-change:
    post:
      consumes:
      - application/json
      description: Init email change
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Init email change
      tags:
      - User
  /v1/dv-admin/user/init-email-confirmation:
    post:
      consumes:
      - application/json
      description: Init email confirnation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Init email confirnation
      tags:
      - User
  /v1/dv-admin/user/tg-link:
    post:
      description: Generate telegram link
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-TgLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Generate telegram link
      tags:
      - User
  /v1/dv-admin/user/tg-unlink/confirm:
    post:
      description: Confirm telegram unlink
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Confirm telegram unlink
      tags:
      - User
  /v1/dv-admin/user/tg-unlink/init:
    post:
      description: Init telegram unlink
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Init telegram unlink
      tags:
      - User
  /v1/dv-admin/wallet:
    post:
      consumes:
      - application/json
      description: This endpoint returns wallet's with balance
      parameters:
      - description: GetWalletByStoreRequest
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/GetWalletByStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-GetWalletBalanceResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get wallet's with balance
      tags:
      - Wallet
  /v1/dv-admin/wallet/{searchParam}:
    get:
      description: This endpoint returns wallet's data with transactions
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-array_WalletWithTransactionsInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Find wallet's by address, id or  summary by currencies
      tags:
      - Wallet
  /v1/dv-admin/wallet/addresses:
    post:
      consumes:
      - application/json
      description: Creates/returns wallet with addressed pre-generated.
      parameters:
      - description: CreateRequest
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/CreateWalletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-WalletShort'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create/return wallet with addresses
      tags:
      - Wallet
  /v1/dv-admin/wallet/addresses/converter:
    post:
      description: This endpoint convert legacy address to new format
      parameters:
      - description: AddressConverterRequest
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_wallet_request.AddressConverterRequest'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-ConvertedAddressResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Convert wallet's address
      tags:
      - Wallet
  /v1/dv-admin/wallet/addresses/keys:
    get:
      consumes:
      - application/json
      description: This endpoint returns private keys for each wallet's asset.
      parameters:
      - description: TOTP auth code
        in: query
        name: totp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get wallet's private/public keys.
      tags:
      - Wallet
  /v1/dv-admin/wallet/addresses/seeds:
    get:
      consumes:
      - application/json
      description: This endpoint returns wallet's seed phrases
      parameters:
      - description: TOTP auth code
        in: query
        name: totp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WalletSeedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get wallet's seed phrase
      tags:
      - Wallet
  /v1/dv-admin/wallet/balances/cold:
    get:
      description: Get cold wallet's addresses total balance
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WalletAddressTotalUSDResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get cold wallet's addresses total balance
      tags:
      - Wallet
  /v1/dv-admin/wallet/balances/exchange-settings:
    get:
      description: Get withdrawal wallet's addresses total balance
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WalletAddressTotalUSDResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get withdrawal wallet's addresses total balance
      tags:
      - Wallet
  /v1/dv-admin/wallet/balances/hot:
    get:
      description: Get hot wallet's addresses total balance
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WalletAddressTotalUSDResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get hot wallet's addresses total balance
      tags:
      - Wallet
  /v1/dv-admin/wallet/info/{searchParam}:
    get:
      description: 'This endpoint returns wallet''s data group by blockchains  **Deprecated**:
        Use `/v1/dv-admin/search/:searchParam instead'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WalletWithBlockchains'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Find wallet's and get info grouped by blockchain
      tags:
      - Wallet
  /v1/dv-admin/wallet/keys/hot:
    post:
      description: Get hot wallet's keys
      parameters:
      - description: GetHotWalletKeysRequest
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/GetHotWalletKeysRequest'
      produces:
      - application/json
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get hot wallet's keys
      tags:
      - Wallet
  /v1/dv-admin/wallet/restore/{walletId}:
    post:
      description: This endpoint returns wallet's data group by blockchains
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Restore missed wallet transaction
      tags:
      - Wallet
  /v1/dv-admin/wallet/summary:
    get:
      description: This endpoint returns wallet's summary stats grouped by currencies
      parameters:
      - in: query
        name: min_balance
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-array_SummaryDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get wallet's summary by currencies
      tags:
      - Wallet
  /v1/dv-admin/webhook/history:
    get:
      consumes:
      - application/json
      description: This endpoint returns webhook history
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: store_uuids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WhHistoryResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get webhooks history by stores
      tags:
      - WebhookHistory
  /v1/dv-admin/webhook/send-test:
    post:
      consumes:
      - application/json
      description: This endpoint emulates store webhook
      parameters:
      - description: TestWebhookRequest
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/TestWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-SendTestResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Emulate webhook to store
      tags:
      - StoreWebhook
  /v1/dv-admin/withdraw-multiple-to-processing:
    post:
      consumes:
      - application/json
      description: This endpoint for import manual withdraw
      parameters:
      - description: Withdraw to processing
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/MultipleWithdrawalToProcessingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create manual withdraw by specific wallet
      tags:
      - Withdrawal
  /v1/dv-admin/withdrawal-wallet/{walletID}/addresses:
    patch:
      consumes:
      - application/json
      description: This endpoint for update full addresses list
      parameters:
      - description: Update address
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateAddressesListRequest'
      - description: walletID
        in: path
        name: walletID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update withdrawal wallet addresses
      tags:
      - WithdrawalWallet
  /v1/dv-admin/withdrawal/{currencyID}/rules:
    get:
      consumes:
      - application/json
      description: This endpoint returns withdrawal wallet
      parameters:
      - description: Currency ID
        in: path
        name: currencyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-WithdrawalRulesByCurrencyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get withdrawal wallet
      tags:
      - WithdrawalWallet
    patch:
      consumes:
      - application/json
      description: This endpoint for update withdrawal wallet
      parameters:
      - description: walletID
        in: path
        name: walletID
        required: true
        type: string
      - description: Update withdrawal wallet
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/UpdateWithdrawalWalletsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update withdrawal wallet
      tags:
      - WithdrawalWallet
  /v1/dv-admin/withdrawal/address-book:
    delete:
      consumes:
      - application/json
      description: Delete address book entries based on type (individual, universal,
        or EVM). Requires 2FA verification.
      parameters:
      - description: Deletion request with type flags
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.DeleteAddressBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete address book entries
      tags:
      - Address Book
    get:
      consumes:
      - application/json
      description: Get all address book entries for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-AddressBookListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get user address book
      tags:
      - Address Book
    post:
      consumes:
      - application/json
      description: Create a new address book entry for the current user. Requires
        2FA verification.
      parameters:
      - description: Address book entry data with TOTP
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.CreateAddressBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/JSONResponse-AddressBookEntryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create address book entry
      tags:
      - Address Book
  /v1/dv-admin/withdrawal/address-book/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing address book entry. Requires 2FA verification.
      parameters:
      - description: Address book entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Update data with TOTP
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.UpdateAddressBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-AddressBookEntryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update address book entry
      tags:
      - Address Book
  /v1/dv-admin/withdrawal/address-book/withdrawal-rule:
    post:
      consumes:
      - application/json
      description: Add withdrawal rules based on type (individual, universal, or EVM).
        Requires 2FA verification.
      parameters:
      - description: Withdrawal rule request with type flags
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_dv-net_dv-merchant_internal_delivery_http_request_withdrawal_requests.AddWithdrawalRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Add withdrawal rules
      tags:
      - Address Book
  /v1/dv-admin/withdrawal/rules:
    get:
      consumes:
      - application/json
      description: This endpoint returns withdrawal wallet's
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-array_WithdrawalWalletWithAddress'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get withdrawal wallets
      tags:
      - WithdrawalWallet
  /v1/dv-admin/withdrawal/withdraw-manual:
    post:
      consumes:
      - application/json
      description: This endpoint for import manual withdraw
      parameters:
      - description: Manual withdraw
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ManualWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create manual withdraw by specific wallet
      tags:
      - Withdrawal
  /v1/dv-admin/withdrawal/withdraw-multiple-manual:
    post:
      consumes:
      - application/json
      description: This endpoint for import manual withdraw
      parameters:
      - description: Manual withdraw
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/ManualMultipleWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create manual withdraw by specific wallet
      tags:
      - Withdrawal
  /v1/dv-admin/withdrawal/withdraw-to-processing:
    post:
      consumes:
      - application/json
      description: This endpoint for import manual withdraw
      parameters:
      - description: Withdraw to processing
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/WithdrawalToProcessingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_string'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/APIErrors'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Create manual withdraw by specific wallet
      tags:
      - Withdrawal
  /v1/dv-admin/withdrawal/withdrawal-from-processing:
    post:
      consumes:
      - application/json
      description: Initialize withdrawal from processing
      parameters:
      - description: Init withdrawal
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateProcessingWithdrawalInternalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProcessingWithdrawalResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "423":
          description: Locked
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Initialize withdrawal from processing
      tags:
      - Withdrawal
  /v1/exchange/:exchange_slug/deposit-update:
    get:
      description: Update deposit addresses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_DepositUpdateResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Update deposit addresses
      tags:
      - Exchange
  /v1/exchange/:exchange_slug/withdrawal-setting:
    get:
      consumes:
      - application/json
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_ExchangeWithdrawalSettingResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get all withdrawal settings
      tags:
      - Exchange
    post:
      consumes:
      - application/json
      description: Creates withdrawal setting with minimum value in USD to withdrawal
        from exchange
      parameters:
      - description: Create withdrawal
        in: body
        name: withdrawal
        required: true
        schema:
          $ref: '#/definitions/ExchangeCreateWithdrawalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Create withdrawal setting
      tags:
      - Exchange
  /v1/exchange/:slug/pairs:
    get:
      description: Get exchange pairs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_github_com_dv-net_dv-merchant_internal_models_ExchangeSymbolDTO'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get exchange pairs
      tags:
      - Exchange
  /v1/exchange/:slug/withdrawal-rules:
    get:
      description: Get exchange withdrawal rules for all enabled currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_array_github_com_dv-net_dv-merchant_internal_delivery_http_responses_exchange_response_ExchangeWithdrawalRulesResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get exchange withdrawal rules
      tags:
      - Exchange
  /v1/exchange/{exchange_slug}/chains:
    get:
      description: Get exchange chains
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_ExchangeChain'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get exchange chains
      tags:
      - Exchange
  /v1/exchange/{exchange_slug}/toggle-swaps:
    post:
      description: Toggle exchange swaps
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      - description: Toggle swaps request
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/ExchangeToggleSwapsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Toggle exchange swaps
      tags:
      - Exchange
  /v1/exchange/{exchange_slug}/toggle-withdrawals:
    post:
      description: Toggle exchange withdrawals
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      - description: Toggle withdrawals request
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/ExchangeToggleWithdrawalsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Toggle exchange withdrawals
      tags:
      - Exchange
  /v1/exchange/{exchange_slug}/withdrawal-setting/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      - description: Setting UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Delete withdrawal setting by id
      tags:
      - Exchange
    get:
      consumes:
      - application/json
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      - description: Setting UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExchangeWithdrawalSettingResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get all withdrawal setting by id
      tags:
      - Exchange
    patch:
      consumes:
      - application/json
      parameters:
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      - description: Setting UUID
        in: path
        name: id
        required: true
        type: string
      - description: Update exchange settings
        in: body
        name: update_keys
        required: true
        schema:
          $ref: '#/definitions/UpdateWithdrawalSetting'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExchangeWithdrawalSettingResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Update withdrawal setting by id
      tags:
      - Exchange
  /v1/exchange/{exchange_slug}/withdrawal/{id}:
    get:
      description: Get withdrawal by ID
      parameters:
      - description: Withdrawal UUID
        in: path
        name: id
        required: true
        type: string
      - description: Exchange slug
        in: path
        name: exchange_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExchangeWithdrawalHistoryResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get withdrawal by ID
      tags:
      - Exchange
  /v1/exchange/deposit-addresses:
    get:
      description: Get exchange deposit address
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_GetDepositAddressesResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get exchange deposit address
      tags:
      - Exchange
  /v1/exchange/exchange-history:
    get:
      description: Get user exchange orders history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-ExchangeOrderHistoryResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get user exchange orders history
      tags:
      - Exchange
  /v1/exchange/exchange-history/export:
    get:
      description: Download user exchange orders history
      parameters:
      - in: query
        name: date_from
        type: string
      - in: query
        name: date_to
        type: string
      - enum:
        - csv
        - xlsx
        in: query
        name: format
        required: true
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - in: query
        name: slug
        type: string
      produces:
      - application/json
      responses:
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Download user exchange orders history
      tags:
      - Exchange
  /v1/exchange/withdrawal:
    get:
      description: Get withdrawals
      parameters:
      - description: Get withdrawal request
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/ExchangeGetWithdrawalsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-ExchangeWithdrawalHistoryResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Get withdrawals
      tags:
      - Exchange
  /v1/exchange/withdrawal/export:
    get:
      description: Download withdrawals
      parameters:
      - description: Get withdrawal exported request
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/ExchangeGetWithdrawalsExportedRequest'
      produces:
      - application/json
      responses:
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - Bearer: []
      summary: Download withdrawals
      tags:
      - Exchange
  /v1/external/exchange-balances:
    get:
      consumes:
      - application/json
      description: Get external exchange balances
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExternalExchangeBalanceResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Get external exchange balances
      tags:
      - Exchange
  /v1/external/processing-wallet-balances:
    get:
      consumes:
      - application/json
      description: Get external processing wallet balances
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      - collectionFormat: csv
        in: query
        items:
          enum:
          - arbitrum
          - bitcoin
          - bitcoincash
          - bsc
          - dogecoin
          - ethereum
          - litecoin
          - polygon
          - tron
          type: string
        name: blockchains
        type: array
        uniqueItems: true
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: currencies
        type: array
        uniqueItems: true
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ExternalProcessingWalletBalanceResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Get external processing wallet balances
      tags:
      - Withdrawal
  /v1/external/store/currencies:
    get:
      consumes:
      - application/json
      description: Get store currencies list
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_GetCurrencyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Get store currencies list
      tags:
      - Store
  /v1/external/store/currencies/{id}/rate:
    get:
      consumes:
      - application/json
      description: Get store currency rate
      parameters:
      - description: Currency ID
        in: path
        name: id
        required: true
        type: string
      - description: Store API key
        in: query
        name: api_key
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CurrencyRate'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Get store currency rate
      tags:
      - Store
  /v1/external/wallet:
    get:
      consumes:
      - application/json
      description: Create wallet with address
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      - in: query
        name: amount
        type: number
      - in: query
        name: currency
        type: string
      - format: email
        in: query
        name: email
        type: string
      - format: ipv4
        in: query
        name: ip
        type: string
      - in: query
        name: locale
        type: string
      - format: uuid
        in: query
        name: store_external_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CreateWalletExternalResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Create wallet with address
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: Create wallet with address
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      - description: Create wallet
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateWalletExternalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CreateWalletExternalResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Create wallet with address
      tags:
      - Wallet
  /v1/external/wallet/balance/hot:
    get:
      description: Get external hot wallet balances
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      - in: query
        name: min_balance
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/JSONResponse-array_SummaryDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Get external hot wallet balances
      tags:
      - Store
  /v1/external/withdrawal-from-processing:
    post:
      consumes:
      - application/json
      description: Initialize withdrawal from processing
      parameters:
      - description: Store API key
        in: query
        name: api_key
        required: true
        type: string
      - description: Init withdrawal
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/CreateProcessingWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProcessingWithdrawalResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "423":
          description: Locked
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Initialize withdrawal from processing
      tags:
      - Withdrawal
  /v1/external/withdrawal-from-processing/{id}:
    delete:
      description: Delete withdrawal from processing
      parameters:
      - description: Store API key
        in: query
        name: api_key
        type: string
      - description: Withdrawal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Delete withdrawal from processing
      tags:
      - Withdrawal
    get:
      description: Get withdrawal from processing
      parameters:
      - description: Store API key
        in: query
        name: api_key
        required: true
        type: string
      - description: Withdrawal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-WithdrawalFromProcessingDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/APIErrors'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - XApiKey: []
      summary: Get withdrawal from processing
      tags:
      - Withdrawal
  /v1/notifications/{id}:
    put:
      consumes:
      - application/json
      description: List available user settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: List available user settings
      tags:
      - Notifications
  /v1/notifications/list:
    get:
      consumes:
      - application/json
      description: List available user notifications
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_UserNotificationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: List available user notifications
      tags:
      - Notifications
  /v1/notifications/list/update:
    patch:
      consumes:
      - application/json
      description: Update list user notifications
      parameters:
      - description: Update user notifications list
        in: body
        name: updateList
        required: true
        schema:
          $ref: '#/definitions/UpdateList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Update list user notifications
      tags:
      - Notifications
  /v1/notifications/test:
    post:
      consumes:
      - application/json
      parameters:
      - description: Test email request
        in: body
        name: testEmailRequest
        required: true
        schema:
          $ref: '#/definitions/TestNotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Test local SMTP server email sending
      tags:
      - Notifications
  /v1/public/currencies:
    get:
      consumes:
      - application/json
      description: Get all Currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_GetCurrencyResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get all Currencies
      tags:
      - Currency
  /v1/public/currencies/{id}:
    get:
      consumes:
      - application/json
      description: Get Currency by ID
      parameters:
      - description: Currency ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-GetCurrencyResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get Currency by ID
      tags:
      - Currency
  /v1/public/currencies/rate/{source}:
    get:
      consumes:
      - application/json
      description: Get Currency rate
      parameters:
      - description: Currency Source example binance
        in: path
        name: source
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-array_ExchangeRate'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get Currency rate
      tags:
      - Currency
  /v1/public/mnemonic/generate:
    get:
      consumes:
      - application/json
      description: Generate random mnemonic
      parameters:
      - description: Length of mnemonic, 12 or 24 words
        in: query
        name: length
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-github_com_dv-net_dv-merchant_internal_delivery_http_responses_mnemonic_response_MnemonicResponse'
      summary: Generate random mnemonic
      tags:
      - Mnemonic
      - Public
  /v1/public/store/topup/{store_id}/{external_id}:
    get:
      consumes:
      - application/json
      description: Get wallet full data
      parameters:
      - description: Slug of the shop
        in: path
        name: slug
        required: true
        type: string
      - description: External client ID
        in: path
        name: external_id
        required: true
        type: string
      - format: email
        in: query
        name: email
        type: string
      - format: ipv4
        in: query
        name: ip
        type: string
      - in: query
        name: locale
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-PublicGetWalletResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get top up data by store
      tags:
      - Wallet
      - Public
  /v1/public/user/accept-invite:
    post:
      consumes:
      - application/json
      description: Accept admin invite link
      parameters:
      - description: Invite request
        in: body
        name: inviteRequest
        required: true
        schema:
          $ref: '#/definitions/PublicAcceptInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
      summary: Accept admin invite link
      tags:
      - User
      - Public
  /v1/public/user/forgot-password:
    post:
      consumes:
      - application/json
      description: Request password reset link by email
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/PublicUserForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
      summary: Request password reset link by email
      tags:
      - User
      - Public
  /v1/public/user/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password
      parameters:
      - description: Public reset password request
        in: body
        name: resetPassword
        required: true
        schema:
          $ref: '#/definitions/PublicResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
      summary: Reset user password
      tags:
      - User
      - Public
  /v1/public/wallet/{id}:
    get:
      consumes:
      - application/json
      description: Get wallet full data
      parameters:
      - description: Wallet ID
        in: path
        name: id
        required: true
        type: string
      - description: Locale
        in: query
        name: locale
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-PublicGetWalletResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get wallet full data
      tags:
      - Wallet
      - Public
  /v1/public/wallet/{id}/confirm:
    get:
      consumes:
      - application/json
      description: Notify wallet email
      parameters:
      - description: Wallet ID
        in: path
        name: id
        required: true
        type: string
      - description: Currency ID
        in: query
        name: currency_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Notify wallet email
      tags:
      - Wallet
      - Public
  /v1/public/wallet/{id}/tx-find:
    get:
      description: Get recent wallet transactions
      parameters:
      - description: Wallet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ShortTransactionInfoListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Get recent wallet transactions
      tags:
      - Wallet
      - Public
  /v1/store/{id}/whitelists/{ip}:
    delete:
      consumes:
      - application/json
      description: Delete store whitelist
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Whitelist IP
        in: path
        name: ip
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Delete store whitelist
      tags:
      - Store
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
  XApiKey:
    description: Store API key
    in: header
    name: X-Api-Key
    type: apiKey
swagger: "2.0"
